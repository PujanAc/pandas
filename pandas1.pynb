{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO0K1zcMFxTbR0O5YFoTciC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"EZOILK7Gd5oP"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"swzzCwaJYSRp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#lists to series\n","name=['pujan','hari','shayam']\n","pd.Series(name)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"RUVFrvyRnf6-","executionInfo":{"status":"ok","timestamp":1742642727545,"user_tz":-345,"elapsed":10,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"4c746161-df90-4ad4-f284-9ea19935cae6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0     pujan\n","1      hari\n","2    shayam\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>pujan</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>hari</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>shayam</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["##giving custom indexing\n","marks=[55,45,22]\n","pd.Series(marks,index=name)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"tb6jo3_any2d","executionInfo":{"status":"ok","timestamp":1742542589292,"user_tz":-345,"elapsed":10,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"acc46126-38c5-4783-a684-572b0c3ccd8e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pujan     55\n","hari      45\n","shayam    22\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>pujan</th>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>hari</th>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>shayam</th>\n","      <td>22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["##you can give custom name as well\n","marks=[55,45,22]\n","marks_series=pd.Series(marks,index=name, name='marks of studnets')\n","marks_series"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":200},"id":"iKA9ZO5Koejw","executionInfo":{"status":"error","timestamp":1742642722047,"user_tz":-345,"elapsed":94,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"c1ab29dc-d36c-4dc9-91e9-5a7ea690bbdf"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'name' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-60-8da98fcaa0eb>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m##you can give custom name as well\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mmarks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m55\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m45\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m22\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mmarks_series\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSeries\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmarks\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'marks of studnets'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mmarks_series\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'name' is not defined"]}]},{"cell_type":"code","source":["markss={\n","    'hari':90,\n","    'lorence':30,\n","    'rama':88,\n","}\n","pd.Series(markss,name='students name')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"AdpUdcJtoen8","executionInfo":{"status":"ok","timestamp":1742542843239,"user_tz":-345,"elapsed":72,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"bf4710d5-de0d-4842-9cb2-818d95a3dce7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["hari       90\n","lorence    30\n","rama       88\n","Name: students name, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>students name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>hari</th>\n","      <td>90</td>\n","    </tr>\n","    <tr>\n","      <th>lorence</th>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>rama</th>\n","      <td>88</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["#size gives no of items\n","marks_series.size"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Qha_16-nzA1","executionInfo":{"status":"ok","timestamp":1742543400738,"user_tz":-345,"elapsed":16,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"94eb53e1-e11f-4ef4-ae4c-78deada11041"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["# unique check if all items are unique or not\n","marks_series.is_unique"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9psaEWK0nzDB","executionInfo":{"status":"ok","timestamp":1742543472077,"user_tz":-345,"elapsed":11,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"29735a36-b1f7-43b6-fe3b-f4cb228549ad"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["#name\n","marks_series.name"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":164},"id":"Bx8jeUg9nzGb","executionInfo":{"status":"error","timestamp":1747063426127,"user_tz":-345,"elapsed":226,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"4a7815c8-7992-4fa8-fd4b-78d9c3d8e339"},"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'marks_series' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-9b2809595108>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#name\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mmarks_series\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'marks_series' is not defined"]}]},{"cell_type":"code","source":["#to get all indexes of series\n","marks_series.index"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":164},"id":"lw3gr9KdnzNU","executionInfo":{"status":"error","timestamp":1742656533381,"user_tz":-345,"elapsed":19,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"ff612bc5-4879-4c09-9683-f5041f8b04fd"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'marks_series' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-6500940feb9e>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#to get all indexes of series\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mmarks_series\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'marks_series' is not defined"]}]},{"cell_type":"code","source":["##values\n","marks_series.values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BBufk4-3sh9U","executionInfo":{"status":"ok","timestamp":1742543769107,"user_tz":-345,"elapsed":12,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"988f68dc-5f33-4e29-b1de-0804526c67d4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([55, 45, 22])"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["  #series from csv files with one col\n","dt=pd.read_csv('/content/subs.csv').squeeze('columns') ##converting to series\n","dt"],"metadata":{"id":"F2vOzlNXnzQt","colab":{"base_uri":"https://localhost:8080/","height":458},"executionInfo":{"status":"ok","timestamp":1742656529603,"user_tz":-345,"elapsed":35,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"d3bbedff-5fee-4a02-ff67-39e6df0c001f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       48\n","1       57\n","2       40\n","3       43\n","4       44\n","      ... \n","360    231\n","361    226\n","362    155\n","363    144\n","364    172\n","Name: Subscribers gained, Length: 365, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Subscribers gained</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>360</th>\n","      <td>231</td>\n","    </tr>\n","    <tr>\n","      <th>361</th>\n","      <td>226</td>\n","    </tr>\n","    <tr>\n","      <th>362</th>\n","      <td>155</td>\n","    </tr>\n","    <tr>\n","      <th>363</th>\n","      <td>144</td>\n","    </tr>\n","    <tr>\n","      <th>364</th>\n","      <td>172</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>365 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["#two cols\n","st=pd.read_csv('/content/kohli_ipl.csv',index_col='match_no').squeeze('columns')\n","st\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"XpVRTZ8td22R","executionInfo":{"status":"ok","timestamp":1742656535489,"user_tz":-345,"elapsed":10,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"e2ae003e-fb88-44cb-b5b6-9c0853c167a8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["match_no\n","1       1\n","2      23\n","3      13\n","4      12\n","5       1\n","       ..\n","211     0\n","212    20\n","213    73\n","214    25\n","215     7\n","Name: runs, Length: 215, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>runs</th>\n","    </tr>\n","    <tr>\n","      <th>match_no</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>73</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>215 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["movies=pd.read_csv(\"/content/bollywood.csv\",index_col=\"movie\").squeeze(\"columns\")\n"],"metadata":{"id":"avIRmugunsTt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#head and tail will provide you data form top and bottom\n","movies.head(9)"],"metadata":{"id":"AHHCxXf1nshX","colab":{"base_uri":"https://localhost:8080/","height":397},"executionInfo":{"status":"ok","timestamp":1742569067216,"user_tz":-345,"elapsed":174,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"7ffbb7a8-deda-4b00-f3d6-ce5e2fc2257a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie\n","Uri: The Surgical Strike                       Vicky Kaushal\n","Battalion 609                                    Vicky Ahuja\n","The Accidental Prime Minister (film)             Anupam Kher\n","Why Cheat India                                Emraan Hashmi\n","Evening Shadows                             Mona Ambegaonkar\n","Soni (film)                             Geetika Vidya Ohlyan\n","Fraud Saiyaan                                   Arshad Warsi\n","Bombairiya                                      Radhika Apte\n","Manikarnika: The Queen of Jhansi              Kangana Ranaut\n","Name: lead, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lead</th>\n","    </tr>\n","    <tr>\n","      <th>movie</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Uri: The Surgical Strike</th>\n","      <td>Vicky Kaushal</td>\n","    </tr>\n","    <tr>\n","      <th>Battalion 609</th>\n","      <td>Vicky Ahuja</td>\n","    </tr>\n","    <tr>\n","      <th>The Accidental Prime Minister (film)</th>\n","      <td>Anupam Kher</td>\n","    </tr>\n","    <tr>\n","      <th>Why Cheat India</th>\n","      <td>Emraan Hashmi</td>\n","    </tr>\n","    <tr>\n","      <th>Evening Shadows</th>\n","      <td>Mona Ambegaonkar</td>\n","    </tr>\n","    <tr>\n","      <th>Soni (film)</th>\n","      <td>Geetika Vidya Ohlyan</td>\n","    </tr>\n","    <tr>\n","      <th>Fraud Saiyaan</th>\n","      <td>Arshad Warsi</td>\n","    </tr>\n","    <tr>\n","      <th>Bombairiya</th>\n","      <td>Radhika Apte</td>\n","    </tr>\n","    <tr>\n","      <th>Manikarnika: The Queen of Jhansi</th>\n","      <td>Kangana Ranaut</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["movies.tail(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"LDBQ91GJNeQy","executionInfo":{"status":"ok","timestamp":1742569080378,"user_tz":-345,"elapsed":15,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"69a4ea13-3ef8-4ac5-b707-1629b3bbb2df"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie\n","Company (film)            Ajay Devgn\n","Awara Paagal Deewana    Akshay Kumar\n","Name: lead, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lead</th>\n","    </tr>\n","    <tr>\n","      <th>movie</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Company (film)</th>\n","      <td>Ajay Devgn</td>\n","    </tr>\n","    <tr>\n","      <th>Awara Paagal Deewana</th>\n","      <td>Akshay Kumar</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["#sample will provide one row randomly\n","movies.sample()"],"metadata":{"id":"mGYFd8XYnsjm","colab":{"base_uri":"https://localhost:8080/","height":147},"executionInfo":{"status":"ok","timestamp":1742569263126,"user_tz":-345,"elapsed":15,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"bd496e37-c110-464d-88e3-f02102328731"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie\n","Love Shagun    Anuj Sachdeva\n","Name: lead, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lead</th>\n","    </tr>\n","    <tr>\n","      <th>movie</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Love Shagun</th>\n","      <td>Anuj Sachdeva</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["##we can also pass num\n","movies.sample(7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"_cAQCzhGOOZB","executionInfo":{"status":"ok","timestamp":1742569383327,"user_tz":-345,"elapsed":12,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"b954db87-6765-44f2-a32b-11dede39d162"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie\n","Force 2                   John Abraham\n","Simmba                   Ranveer Singh\n","Corporate (2006 film)     Bipasha Basu\n","PM Narendra Modi           Boman Irani\n","Second Hand Husband         Dharmendra\n","Pyaar Ka Punchnama 2     Kartik Aaryan\n","Phantom (2015 film)      Saif Ali Khan\n","Name: lead, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lead</th>\n","    </tr>\n","    <tr>\n","      <th>movie</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Force 2</th>\n","      <td>John Abraham</td>\n","    </tr>\n","    <tr>\n","      <th>Simmba</th>\n","      <td>Ranveer Singh</td>\n","    </tr>\n","    <tr>\n","      <th>Corporate (2006 film)</th>\n","      <td>Bipasha Basu</td>\n","    </tr>\n","    <tr>\n","      <th>PM Narendra Modi</th>\n","      <td>Boman Irani</td>\n","    </tr>\n","    <tr>\n","      <th>Second Hand Husband</th>\n","      <td>Dharmendra</td>\n","    </tr>\n","    <tr>\n","      <th>Pyaar Ka Punchnama 2</th>\n","      <td>Kartik Aaryan</td>\n","    </tr>\n","    <tr>\n","      <th>Phantom (2015 film)</th>\n","      <td>Saif Ali Khan</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["##value_counts will tell us about the total frequency of values\n","movies.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"IurzV6PkOOfm","executionInfo":{"status":"ok","timestamp":1742570833575,"user_tz":-345,"elapsed":5,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"9789e077-3536-448a-a320-825b0c5d0436"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["lead\n","Akshay Kumar         48\n","Amitabh Bachchan     45\n","Ajay Devgn           38\n","Salman Khan          31\n","Sanjay Dutt          26\n","                     ..\n","Seema Azmi            1\n","Akanksha Puri         1\n","Charanpreet Insan     1\n","Jaideep Ahlawat       1\n","Monali Thakur         1\n","Name: count, Length: 566, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>lead</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akshay Kumar</th>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>Amitabh Bachchan</th>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>Ajay Devgn</th>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>Salman Khan</th>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>Sanjay Dutt</th>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Seema Azmi</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Akanksha Puri</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Charanpreet Insan</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Jaideep Ahlawat</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Monali Thakur</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>566 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["##sort_values is used to sort values]\n","val=st.sort_values(ascending=False)\n","val.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"7llqQPpgOOig","executionInfo":{"status":"ok","timestamp":1742571218791,"user_tz":-345,"elapsed":66,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"1c8d7f33-664a-46a7-b59a-95e6e759fe94"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["match_no\n","128    113\n","126    109\n","123    108\n","120    100\n","164    100\n","Name: runs, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>runs</th>\n","    </tr>\n","    <tr>\n","      <th>match_no</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>128</th>\n","      <td>113</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>109</td>\n","    </tr>\n","    <tr>\n","      <th>123</th>\n","      <td>108</td>\n","    </tr>\n","    <tr>\n","      <th>120</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>100</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"i76YqdF2OOks","executionInfo":{"status":"ok","timestamp":1742570862675,"user_tz":-345,"elapsed":47,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"9a7beb63-29ab-4eaa-d88f-0e28d026c3a5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie\n","Qaidi Band                            Aadar Jain\n","Roar: Tigers of the Sundarbans      Aadil Chahal\n","Lipstick Under My Burkha            Aahana Kumra\n","Raat Gayi Baat Gayi?                Aamir Bashir\n","Talaash: The Answer Lies Within       Aamir Khan\n","                                        ...     \n","Dil Toh Deewana Hai                  Zeenat Aman\n","Sallu Ki Shaadi                      Zeenat Aman\n","Strings of Passion                   Zeenat Aman\n","Dunno Y... Na Jaane Kyon             Zeenat Aman\n","Taj Mahal: An Eternal Love Story     Zulfi Sayed\n","Name: lead, Length: 1500, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lead</th>\n","    </tr>\n","    <tr>\n","      <th>movie</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Qaidi Band</th>\n","      <td>Aadar Jain</td>\n","    </tr>\n","    <tr>\n","      <th>Roar: Tigers of the Sundarbans</th>\n","      <td>Aadil Chahal</td>\n","    </tr>\n","    <tr>\n","      <th>Lipstick Under My Burkha</th>\n","      <td>Aahana Kumra</td>\n","    </tr>\n","    <tr>\n","      <th>Raat Gayi Baat Gayi?</th>\n","      <td>Aamir Bashir</td>\n","    </tr>\n","    <tr>\n","      <th>Talaash: The Answer Lies Within</th>\n","      <td>Aamir Khan</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Dil Toh Deewana Hai</th>\n","      <td>Zeenat Aman</td>\n","    </tr>\n","    <tr>\n","      <th>Sallu Ki Shaadi</th>\n","      <td>Zeenat Aman</td>\n","    </tr>\n","    <tr>\n","      <th>Strings of Passion</th>\n","      <td>Zeenat Aman</td>\n","    </tr>\n","    <tr>\n","      <th>Dunno Y... Na Jaane Kyon</th>\n","      <td>Zeenat Aman</td>\n","    </tr>\n","    <tr>\n","      <th>Taj Mahal: An Eternal Love Story</th>\n","      <td>Zulfi Sayed</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1500 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":[],"metadata":{"id":"eVQ3OVAEYn5i"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["##sort values will not make permanent changes to data unless we pass inplace\n","st=pd.read_csv('/content/kohli_ipl.csv',index_col='match_no').squeeze('columns')\n","st=st.copy() ##making a copy of data bcz it is used elsewhere\n","st.sort_values()\n","\n","st"],"metadata":{"id":"GBc78YTHnslu","colab":{"base_uri":"https://localhost:8080/","height":489},"executionInfo":{"status":"ok","timestamp":1742573018010,"user_tz":-345,"elapsed":10,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"991e1758-3a30-4dab-c0fe-62b1040aeab2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["match_no\n","1       1\n","2      23\n","3      13\n","4      12\n","5       1\n","       ..\n","211     0\n","212    20\n","213    73\n","214    25\n","215     7\n","Name: runs, Length: 215, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>runs</th>\n","    </tr>\n","    <tr>\n","      <th>match_no</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>73</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>215 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":[],"metadata":{"id":"cyadFP7cnsn8","colab":{"base_uri":"https://localhost:8080/","height":489},"executionInfo":{"status":"ok","timestamp":1742572093375,"user_tz":-345,"elapsed":7,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"bd09d5cc-531e-470b-de5a-cb95247e1b15"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["match_no\n","8        0\n","87       0\n","93       0\n","91       0\n","206      0\n","      ... \n","164    100\n","120    100\n","123    108\n","126    109\n","128    113\n","Name: runs, Length: 215, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>runs</th>\n","    </tr>\n","    <tr>\n","      <th>match_no</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>87</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>93</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>91</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>206</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>164</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>120</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>123</th>\n","      <td>108</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>109</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>113</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>215 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["##sort_index\n","movies.sort_index()\n"],"metadata":{"id":"exssekhTnsrN","colab":{"base_uri":"https://localhost:8080/","height":489},"executionInfo":{"status":"ok","timestamp":1742572604336,"user_tz":-345,"elapsed":6,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"acec7b79-ca36-457b-c1d4-a3312e32b2a0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie\n","1920 (film)                   Rajniesh Duggall\n","1920: London                     Sharman Joshi\n","1920: The Evil Returns             Vicky Ahuja\n","1971 (2007 film)                Manoj Bajpayee\n","2 States (2014 film)              Arjun Kapoor\n","                                   ...        \n","Zindagi 50-50                      Veena Malik\n","Zindagi Na Milegi Dobara        Hrithik Roshan\n","Zindagi Tere Naam           Mithun Chakraborty\n","Zokkomon                       Darsheel Safary\n","Zor Lagaa Ke...Haiya!            Meghan Jadhav\n","Name: lead, Length: 1500, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lead</th>\n","    </tr>\n","    <tr>\n","      <th>movie</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1920 (film)</th>\n","      <td>Rajniesh Duggall</td>\n","    </tr>\n","    <tr>\n","      <th>1920: London</th>\n","      <td>Sharman Joshi</td>\n","    </tr>\n","    <tr>\n","      <th>1920: The Evil Returns</th>\n","      <td>Vicky Ahuja</td>\n","    </tr>\n","    <tr>\n","      <th>1971 (2007 film)</th>\n","      <td>Manoj Bajpayee</td>\n","    </tr>\n","    <tr>\n","      <th>2 States (2014 film)</th>\n","      <td>Arjun Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Zindagi 50-50</th>\n","      <td>Veena Malik</td>\n","    </tr>\n","    <tr>\n","      <th>Zindagi Na Milegi Dobara</th>\n","      <td>Hrithik Roshan</td>\n","    </tr>\n","    <tr>\n","      <th>Zindagi Tere Naam</th>\n","      <td>Mithun Chakraborty</td>\n","    </tr>\n","    <tr>\n","      <th>Zokkomon</th>\n","      <td>Darsheel Safary</td>\n","    </tr>\n","    <tr>\n","      <th>Zor Lagaa Ke...Haiya!</th>\n","      <td>Meghan Jadhav</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1500 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["##count count will not count nan values but size will do\n","st.count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-rYfvoUkbCn7","executionInfo":{"status":"ok","timestamp":1742573473752,"user_tz":-345,"elapsed":8,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"5e167003-5270-46a3-989e-b0003779a785"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(215)"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["#sum\n","st.sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_j0D5eP2bCyF","executionInfo":{"status":"ok","timestamp":1742573521445,"user_tz":-345,"elapsed":6,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"ce5876bf-b22d-4d86-8d0d-c66fa0d405cd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(6634)"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["#min and max will give values of min and max\n","st.max()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HuukdJ1gbC0P","executionInfo":{"status":"ok","timestamp":1742573887845,"user_tz":-345,"elapsed":8,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"acd29a21-959a-4a5b-bc4a-7618d7b20529"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["113"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["#avg->mean->median->std ->var\n","st.std()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HM7kVUncbC2e","executionInfo":{"status":"ok","timestamp":1742573942885,"user_tz":-345,"elapsed":7,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"18210ab4-6b14-4536-fc27-81615cc29b4d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["26.22980132830278"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["st.mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zZudlaTibC4n","executionInfo":{"status":"ok","timestamp":1742574009537,"user_tz":-345,"elapsed":125,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"a6ec08f6-abfe-4a51-f2f6-23c124d89cc6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.float64(30.855813953488372)"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["st.var()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZMO_hWUgbC7N","executionInfo":{"status":"ok","timestamp":1742574045948,"user_tz":-345,"elapsed":18,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"4e6f1fc5-8692-4555-f704-d4db89cf35ae"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["688.0024777222344"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["#describe\n","st.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"tHW-UfA9bC9j","executionInfo":{"status":"ok","timestamp":1742574160905,"user_tz":-345,"elapsed":83,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"28e9b946-5cbf-4445-c4ef-4acffdc38942"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    215.000000\n","mean      30.855814\n","std       26.229801\n","min        0.000000\n","25%        9.000000\n","50%       24.000000\n","75%       48.000000\n","max      113.000000\n","Name: runs, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>runs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>215.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>30.855814</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>26.229801</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>9.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>24.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>48.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>113.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["##indexing movies[0]\n","\n","movies[-1]"],"metadata":{"id":"09NC_tSKbDA5","colab":{"base_uri":"https://localhost:8080/","height":182},"executionInfo":{"status":"error","timestamp":1747066661637,"user_tz":-345,"elapsed":12,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"9948d7e0-7557-4949-b781-06af7102e9f2","collapsed":true},"execution_count":3,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'movies' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-5af3bcd399eb>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m##indexing movies[0]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mmovies\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'movies' is not defined"]}]},{"cell_type":"code","source":["#slicing\n","movies[-2]\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":92},"id":"Y8UmJuE-em3o","executionInfo":{"status":"ok","timestamp":1742640928695,"user_tz":-345,"elapsed":16,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"c7c39cd2-9ff7-4c47-ee39-b3d8242bff7e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-34-f35750bf28de>:2: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n","  movies[-2]\n"]},{"output_type":"execute_result","data":{"text/plain":["'Ajay Devgn'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["##by particular index\n","movies[[3,7]]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":234},"id":"xbAWJwODfn8L","executionInfo":{"status":"ok","timestamp":1742640969186,"user_tz":-345,"elapsed":17,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"db6b9630-766a-4fc6-bdec-eccde69ede62"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-36-f088e4d42324>:1: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n","  movies[[3,7]]\n"]},{"output_type":"execute_result","data":{"text/plain":["movie\n","Why Cheat India    Emraan Hashmi\n","Bombairiya          Radhika Apte\n","Name: lead, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lead</th>\n","    </tr>\n","    <tr>\n","      <th>movie</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Why Cheat India</th>\n","      <td>Emraan Hashmi</td>\n","    </tr>\n","    <tr>\n","      <th>Bombairiya</th>\n","      <td>Radhika Apte</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["##by particular name\n","movies['Bombairiya']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"3kt4NVNhfxYh","executionInfo":{"status":"ok","timestamp":1742641439254,"user_tz":-345,"elapsed":13,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"5de2f5d6-843e-4ce5-aebd-e33b6c4e153c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Radhika Apte'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["\n","movies[30:50]\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":742},"id":"NhDu5xh0gBD1","executionInfo":{"status":"ok","timestamp":1742641480545,"user_tz":-345,"elapsed":69,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"96b63ed5-d270-472a-9864-374fe7a3a46e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie\n","Student of the Year 2               Tiger Shroff\n","PM Narendra Modi                     Boman Irani\n","De De Pyaar De                        Ajay Devgn\n","India's Most Wanted (film)          Arjun Kapoor\n","Yeh Hai India                       Gavie Chahal\n","Khamoshi (2019 film)                 Prabhu Deva\n","Kabir Singh                        Shahid Kapoor\n","Article 15 (film)             Ayushmann Khurrana\n","One Day: Justice Delivered           Anupam Kher\n","Hume Tumse Pyaar Kitna            Karanvir Bohra\n","Super 30 (film)                   Hrithik Roshan\n","Family of Thakurganj             Jimmy Sheirgill\n","Batla House                         John Abraham\n","Jhootha Kahin Ka                    Rishi Kapoor\n","Judgementall Hai Kya              Kangana Ranaut\n","Chicken Curry Law               Natalia Janoszek\n","Arjun Patiala                     Diljit Dosanjh\n","Jabariya Jodi                  Sidharth Malhotra\n","Pranaam                        Rajeev Khandelwal\n","The Sky Is Pink                      Zaira Wasim\n","Name: lead, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lead</th>\n","    </tr>\n","    <tr>\n","      <th>movie</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Student of the Year 2</th>\n","      <td>Tiger Shroff</td>\n","    </tr>\n","    <tr>\n","      <th>PM Narendra Modi</th>\n","      <td>Boman Irani</td>\n","    </tr>\n","    <tr>\n","      <th>De De Pyaar De</th>\n","      <td>Ajay Devgn</td>\n","    </tr>\n","    <tr>\n","      <th>India's Most Wanted (film)</th>\n","      <td>Arjun Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>Yeh Hai India</th>\n","      <td>Gavie Chahal</td>\n","    </tr>\n","    <tr>\n","      <th>Khamoshi (2019 film)</th>\n","      <td>Prabhu Deva</td>\n","    </tr>\n","    <tr>\n","      <th>Kabir Singh</th>\n","      <td>Shahid Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>Article 15 (film)</th>\n","      <td>Ayushmann Khurrana</td>\n","    </tr>\n","    <tr>\n","      <th>One Day: Justice Delivered</th>\n","      <td>Anupam Kher</td>\n","    </tr>\n","    <tr>\n","      <th>Hume Tumse Pyaar Kitna</th>\n","      <td>Karanvir Bohra</td>\n","    </tr>\n","    <tr>\n","      <th>Super 30 (film)</th>\n","      <td>Hrithik Roshan</td>\n","    </tr>\n","    <tr>\n","      <th>Family of Thakurganj</th>\n","      <td>Jimmy Sheirgill</td>\n","    </tr>\n","    <tr>\n","      <th>Batla House</th>\n","      <td>John Abraham</td>\n","    </tr>\n","    <tr>\n","      <th>Jhootha Kahin Ka</th>\n","      <td>Rishi Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>Judgementall Hai Kya</th>\n","      <td>Kangana Ranaut</td>\n","    </tr>\n","    <tr>\n","      <th>Chicken Curry Law</th>\n","      <td>Natalia Janoszek</td>\n","    </tr>\n","    <tr>\n","      <th>Arjun Patiala</th>\n","      <td>Diljit Dosanjh</td>\n","    </tr>\n","    <tr>\n","      <th>Jabariya Jodi</th>\n","      <td>Sidharth Malhotra</td>\n","    </tr>\n","    <tr>\n","      <th>Pranaam</th>\n","      <td>Rajeev Khandelwal</td>\n","    </tr>\n","    <tr>\n","      <th>The Sky Is Pink</th>\n","      <td>Zaira Wasim</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":92},"id":"MmZNjoYIgBSt","executionInfo":{"status":"ok","timestamp":1742641498429,"user_tz":-345,"elapsed":16,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"59ab5969-b613-4862-877b-49c108aaf744"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-45-320bcea0c926>:1: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n","  movies[49]\n"]},{"output_type":"execute_result","data":{"text/plain":["'Zaira Wasim'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":45}]},{"cell_type":"markdown","source":["**EDiting the series**"],"metadata":{"id":"_mH10vc3h8RN"}},{"cell_type":"code","source":["##using index\n","movies[2]='pujan ac'\n","movies"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":546},"id":"3ju5Ypq9iCj1","executionInfo":{"status":"ok","timestamp":1742641810707,"user_tz":-345,"elapsed":15,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"2b6dabe8-688b-4761-d579-57a34c6f1bb9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-48-97d4cfdbcbf2>:2: FutureWarning: Series.__setitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To set a value by position, use `ser.iloc[pos] = value`\n","  movies[2]='pujan ac'\n"]},{"output_type":"execute_result","data":{"text/plain":["movie\n","Uri: The Surgical Strike                   Vicky Kaushal\n","Battalion 609                                Vicky Ahuja\n","The Accidental Prime Minister (film)            pujan ac\n","Why Cheat India                            Emraan Hashmi\n","Evening Shadows                         Mona Ambegaonkar\n","                                              ...       \n","Hum Tumhare Hain Sanam                    Shah Rukh Khan\n","Aankhen (2002 film)                     Amitabh Bachchan\n","Saathiya (film)                             Vivek Oberoi\n","Company (film)                                Ajay Devgn\n","Awara Paagal Deewana                        Akshay Kumar\n","Name: lead, Length: 1500, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lead</th>\n","    </tr>\n","    <tr>\n","      <th>movie</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Uri: The Surgical Strike</th>\n","      <td>Vicky Kaushal</td>\n","    </tr>\n","    <tr>\n","      <th>Battalion 609</th>\n","      <td>Vicky Ahuja</td>\n","    </tr>\n","    <tr>\n","      <th>The Accidental Prime Minister (film)</th>\n","      <td>pujan ac</td>\n","    </tr>\n","    <tr>\n","      <th>Why Cheat India</th>\n","      <td>Emraan Hashmi</td>\n","    </tr>\n","    <tr>\n","      <th>Evening Shadows</th>\n","      <td>Mona Ambegaonkar</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Hum Tumhare Hain Sanam</th>\n","      <td>Shah Rukh Khan</td>\n","    </tr>\n","    <tr>\n","      <th>Aankhen (2002 film)</th>\n","      <td>Amitabh Bachchan</td>\n","    </tr>\n","    <tr>\n","      <th>Saathiya (film)</th>\n","      <td>Vivek Oberoi</td>\n","    </tr>\n","    <tr>\n","      <th>Company (film)</th>\n","      <td>Ajay Devgn</td>\n","    </tr>\n","    <tr>\n","      <th>Awara Paagal Deewana</th>\n","      <td>Akshay Kumar</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1500 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["##using slicing\n","st[3:5]=[100,100]\n","st"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"BVGGilNQi_pG","executionInfo":{"status":"ok","timestamp":1742641844538,"user_tz":-345,"elapsed":7,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"8027e8a6-3a63-46c1-c426-ded2b95b232e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["match_no\n","1        1\n","2       23\n","3       13\n","4      100\n","5      100\n","      ... \n","211      0\n","212     20\n","213     73\n","214     25\n","215      7\n","Name: runs, Length: 215, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>runs</th>\n","    </tr>\n","    <tr>\n","      <th>match_no</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>73</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>215 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["#fancy indexing\n","movies[[3,4]]=['pujan','biswas']\n","movies"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":546},"id":"uFxgTKrXjHlM","executionInfo":{"status":"ok","timestamp":1742641885173,"user_tz":-345,"elapsed":18,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"59acbd6f-4a33-445a-b564-a33978876325"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-52-1b676d994ef2>:1: FutureWarning: Series.__setitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To set a value by position, use `ser.iloc[pos] = value`\n","  movies[[3,4]]=['pujan','biswas']\n"]},{"output_type":"execute_result","data":{"text/plain":["movie\n","Uri: The Surgical Strike                   Vicky Kaushal\n","Battalion 609                                Vicky Ahuja\n","The Accidental Prime Minister (film)            pujan ac\n","Why Cheat India                                    pujan\n","Evening Shadows                                   biswas\n","                                              ...       \n","Hum Tumhare Hain Sanam                    Shah Rukh Khan\n","Aankhen (2002 film)                     Amitabh Bachchan\n","Saathiya (film)                             Vivek Oberoi\n","Company (film)                                Ajay Devgn\n","Awara Paagal Deewana                        Akshay Kumar\n","Name: lead, Length: 1500, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lead</th>\n","    </tr>\n","    <tr>\n","      <th>movie</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Uri: The Surgical Strike</th>\n","      <td>Vicky Kaushal</td>\n","    </tr>\n","    <tr>\n","      <th>Battalion 609</th>\n","      <td>Vicky Ahuja</td>\n","    </tr>\n","    <tr>\n","      <th>The Accidental Prime Minister (film)</th>\n","      <td>pujan ac</td>\n","    </tr>\n","    <tr>\n","      <th>Why Cheat India</th>\n","      <td>pujan</td>\n","    </tr>\n","    <tr>\n","      <th>Evening Shadows</th>\n","      <td>biswas</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Hum Tumhare Hain Sanam</th>\n","      <td>Shah Rukh Khan</td>\n","    </tr>\n","    <tr>\n","      <th>Aankhen (2002 film)</th>\n","      <td>Amitabh Bachchan</td>\n","    </tr>\n","    <tr>\n","      <th>Saathiya (film)</th>\n","      <td>Vivek Oberoi</td>\n","    </tr>\n","    <tr>\n","      <th>Company (film)</th>\n","      <td>Ajay Devgn</td>\n","    </tr>\n","    <tr>\n","      <th>Awara Paagal Deewana</th>\n","      <td>Akshay Kumar</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1500 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["movies['Awara Paagal Deewana']='uks'\n","movies"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"iTCVM7Z-jcgo","executionInfo":{"status":"ok","timestamp":1742641961579,"user_tz":-345,"elapsed":15,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"c25de43c-2c79-44f1-98f7-1b51e91e6c44"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie\n","Uri: The Surgical Strike                   Vicky Kaushal\n","Battalion 609                                Vicky Ahuja\n","The Accidental Prime Minister (film)            pujan ac\n","Why Cheat India                                    pujan\n","Evening Shadows                                   biswas\n","                                              ...       \n","Hum Tumhare Hain Sanam                    Shah Rukh Khan\n","Aankhen (2002 film)                     Amitabh Bachchan\n","Saathiya (film)                             Vivek Oberoi\n","Company (film)                                Ajay Devgn\n","Awara Paagal Deewana                                 uks\n","Name: lead, Length: 1500, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lead</th>\n","    </tr>\n","    <tr>\n","      <th>movie</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Uri: The Surgical Strike</th>\n","      <td>Vicky Kaushal</td>\n","    </tr>\n","    <tr>\n","      <th>Battalion 609</th>\n","      <td>Vicky Ahuja</td>\n","    </tr>\n","    <tr>\n","      <th>The Accidental Prime Minister (film)</th>\n","      <td>pujan ac</td>\n","    </tr>\n","    <tr>\n","      <th>Why Cheat India</th>\n","      <td>pujan</td>\n","    </tr>\n","    <tr>\n","      <th>Evening Shadows</th>\n","      <td>biswas</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Hum Tumhare Hain Sanam</th>\n","      <td>Shah Rukh Khan</td>\n","    </tr>\n","    <tr>\n","      <th>Aankhen (2002 film)</th>\n","      <td>Amitabh Bachchan</td>\n","    </tr>\n","    <tr>\n","      <th>Saathiya (film)</th>\n","      <td>Vivek Oberoi</td>\n","    </tr>\n","    <tr>\n","      <th>Company (film)</th>\n","      <td>Ajay Devgn</td>\n","    </tr>\n","    <tr>\n","      <th>Awara Paagal Deewana</th>\n","      <td>uks</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1500 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["##what if no index is given ? it will add new items\n","movies['Dilwale']='Shah rukh'\n","movies"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"7Z10uGkwjiyi","executionInfo":{"status":"ok","timestamp":1742642110365,"user_tz":-345,"elapsed":89,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"98ad3119-d04f-42ad-e194-c20084f0de72"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie\n","Uri: The Surgical Strike                   Vicky Kaushal\n","Battalion 609                                Vicky Ahuja\n","The Accidental Prime Minister (film)            pujan ac\n","Why Cheat India                                    pujan\n","Evening Shadows                                   biswas\n","                                              ...       \n","Aankhen (2002 film)                     Amitabh Bachchan\n","Saathiya (film)                             Vivek Oberoi\n","Company (film)                                Ajay Devgn\n","Awara Paagal Deewana                                 uks\n","Dilwale                                        Shah rukh\n","Name: lead, Length: 1501, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>lead</th>\n","    </tr>\n","    <tr>\n","      <th>movie</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Uri: The Surgical Strike</th>\n","      <td>Vicky Kaushal</td>\n","    </tr>\n","    <tr>\n","      <th>Battalion 609</th>\n","      <td>Vicky Ahuja</td>\n","    </tr>\n","    <tr>\n","      <th>The Accidental Prime Minister (film)</th>\n","      <td>pujan ac</td>\n","    </tr>\n","    <tr>\n","      <th>Why Cheat India</th>\n","      <td>pujan</td>\n","    </tr>\n","    <tr>\n","      <th>Evening Shadows</th>\n","      <td>biswas</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Aankhen (2002 film)</th>\n","      <td>Amitabh Bachchan</td>\n","    </tr>\n","    <tr>\n","      <th>Saathiya (film)</th>\n","      <td>Vivek Oberoi</td>\n","    </tr>\n","    <tr>\n","      <th>Company (film)</th>\n","      <td>Ajay Devgn</td>\n","    </tr>\n","    <tr>\n","      <th>Awara Paagal Deewana</th>\n","      <td>uks</td>\n","    </tr>\n","    <tr>\n","      <th>Dilwale</th>\n","      <td>Shah rukh</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1501 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["##working with python functions\n","##type conversion\n","list[st]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wxRhJoEPji-h","executionInfo":{"status":"ok","timestamp":1742656543056,"user_tz":-345,"elapsed":14,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"b06e2fcf-2210-4f26-cbb8-65c207809494"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["list[match_no\n","1       1\n","2      23\n","3      13\n","4      12\n","5       1\n","       ..\n","211     0\n","212    20\n","213    73\n","214    25\n","215     7\n","Name: runs, Length: 215, dtype: int64]"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["dict(movies)"],"metadata":{"id":"u0Wz4ndAjjCu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1742656595746,"user_tz":-345,"elapsed":179,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"45f8562e-c77c-4233-da93-02a193d9fcb4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Uri: The Surgical Strike': 'Vicky Kaushal',\n"," 'Battalion 609': 'Vicky Ahuja',\n"," 'The Accidental Prime Minister (film)': 'Anupam Kher',\n"," 'Why Cheat India': 'Emraan Hashmi',\n"," 'Evening Shadows': 'Mona Ambegaonkar',\n"," 'Soni (film)': 'Geetika Vidya Ohlyan',\n"," 'Fraud Saiyaan': 'Arshad Warsi',\n"," 'Bombairiya': 'Radhika Apte',\n"," 'Manikarnika: The Queen of Jhansi': 'Kangana Ranaut',\n"," 'Thackeray (film)': 'Nawazuddin Siddiqui',\n"," 'Amavas': 'Ali Asgar',\n"," 'Gully Boy': 'Ranveer Singh',\n"," 'Hum Chaar': 'Prit Kamani',\n"," 'Total Dhamaal': 'Ajay Devgn',\n"," 'Sonchiriya': 'Sushant Singh Rajput',\n"," 'Badla (2019 film)': 'Amitabh Bachchan',\n"," 'Mard Ko Dard Nahi Hota': 'Abhimanyu Dasani',\n"," 'Hamid (film)': 'Talha Arshad Reshi',\n"," 'Photograph (film)': 'Nawazuddin Siddiqui',\n"," 'Risknamaa': 'Garima Agarwal',\n"," 'Mere Pyare Prime Minister': 'Rasika Agashe',\n"," '22 Yards': 'Barun Sobti',\n"," 'Kesari (film)': 'Akshay Kumar',\n"," 'Notebook (2019 film)': 'Zaheer Iqbal',\n"," 'Junglee (2019 film)': 'Vidyut Jammwal',\n"," 'Gone Kesh': 'Deepika Amin',\n"," 'Albert Pinto Ko Gussa Kyun Aata Hai?': 'Manav Kaul',\n"," 'The Tashkent Files': 'Naseeruddin Shah',\n"," 'Kalank': 'Varun Dhawan',\n"," 'Setters (film)': 'Shreyas Talpade',\n"," 'Student of the Year 2': 'Tiger Shroff',\n"," 'PM Narendra Modi': 'Boman Irani',\n"," 'De De Pyaar De': 'Ajay Devgn',\n"," \"India's Most Wanted (film)\": 'Arjun Kapoor',\n"," 'Yeh Hai India': 'Gavie Chahal',\n"," 'Khamoshi (2019 film)': 'Prabhu Deva',\n"," 'Kabir Singh': 'Shahid Kapoor',\n"," 'Article 15 (film)': 'Ayushmann Khurrana',\n"," 'One Day: Justice Delivered': 'Anupam Kher',\n"," 'Hume Tumse Pyaar Kitna': 'Karanvir Bohra',\n"," 'Super 30 (film)': 'Hrithik Roshan',\n"," 'Family of Thakurganj': 'Jimmy Sheirgill',\n"," 'Batla House': 'John Abraham',\n"," 'Jhootha Kahin Ka': 'Rishi Kapoor',\n"," 'Judgementall Hai Kya': 'Kangana Ranaut',\n"," 'Chicken Curry Law': 'Natalia Janoszek',\n"," 'Arjun Patiala': 'Diljit Dosanjh',\n"," 'Jabariya Jodi': 'Sidharth Malhotra',\n"," 'Pranaam': 'Rajeev Khandelwal',\n"," 'The Sky Is Pink': 'Zaira Wasim',\n"," 'Mission Mangal': 'Akshay Kumar',\n"," 'Saaho': 'Jacqueline Fernandez',\n"," 'Dream Girl (2019 film)': 'Ayushmann Khurrana',\n"," 'Section 375': 'Akshaye Khanna',\n"," 'The Zoya Factor (film)': 'Sonam Kapoor',\n"," 'Pal Pal Dil Ke Paas': 'Karan Deol',\n"," 'Prassthanam': 'Sanjay Dutt',\n"," 'P Se Pyaar F Se Faraar': 'Bhavesh Kumar',\n"," 'Ghost (2019 film)': 'Sanaya Irani',\n"," 'Bala (2019 film)': 'Ayushmann Khurrana',\n"," 'Yaaram (2019 film)': 'Siddhanth Kapoor',\n"," 'Housefull 4': 'Akshay Kumar',\n"," 'Saand Ki Aankh': 'Taapsee Pannu',\n"," 'Made in China (2019 film)': 'Rajkummar Rao',\n"," 'Ujda Chaman': 'Sunny Singh Nijjar',\n"," 'Bypass Road (film)': 'Neil Nitin Mukesh',\n"," 'Satellite Shankar': 'Suraj Pancholi',\n"," 'Jhalki': 'Boman Irani',\n"," 'Marjaavaan': 'Riteish Deshmukh',\n"," 'Motichoor Chaknachoor': 'Nawazuddin Siddiqui',\n"," 'Keep Safe Distance (film)': 'Shahbaaz Khan',\n"," 'Pagalpanti (2019 film)': 'Kriti Kharbanda',\n"," 'Ramprasad Ki Tehrvi': 'Naseeruddin Shah',\n"," 'Yeh Saali Aashiqui': 'Vardhan Puri',\n"," 'Dil Bechara': 'Sushant Singh Rajput',\n"," 'Pati Patni Aur Woh (2019 film)': 'Kartik Aaryan',\n"," 'Commando 3 (film)': 'Vidyut Jammwal',\n"," 'Mardaani 2': 'Rani Mukerji',\n"," 'Dabangg 3': 'Salman Khan',\n"," 'Good Newwz': 'Akshay Kumar',\n"," 'Kaalakaandi': 'Saif Ali Khan',\n"," 'Vodka Diaries': 'Kay Kay Menon',\n"," 'My Birthday Song': 'Nora Fatehi',\n"," 'Nirdosh': 'Ashmit Patel',\n"," 'Mukkabaaz': 'Viineet Kumar',\n"," 'Union Leader (film)': 'Rahul Bhat',\n"," 'Love per Square Foot': 'Vicky Kaushal',\n"," 'Aiyaary': 'Sidharth Malhotra',\n"," 'Padmaavat': 'Deepika Padukone',\n"," 'Kuchh Bheege Alfaaz': 'Geetanjali Thapa',\n"," 'Jaane Kyun De Yaaron': 'Akshay Anand',\n"," 'Veerey Ki Wedding': 'Pulkit Samrat',\n"," 'Sonu Ke Titu Ki Sweety': 'Kartik Aaryan',\n"," 'Hate Story 4': 'Lee Byford',\n"," 'Dil Juunglee': 'Taapsee Pannu',\n"," '3 Storeys': 'Aisha Ahmed',\n"," 'Raid (2018 film)': 'Ajay Devgn',\n"," 'Hichki': 'Rani Mukerji',\n"," 'Missing (2018 film)': 'Manoj Bajpayee',\n"," 'Baaghi 2': 'Tiger Shroff',\n"," 'October (2018 film)': 'Varun Dhawan',\n"," 'Mercury (film)': 'Prabhu Deva',\n"," 'Beyond the Clouds (2017 film)': 'Ishaan Khattar',\n"," 'Nanu Ki Jaanu': 'Abhay Deol',\n"," 'Daas Dev': 'Yogesh Raj Mishra',\n"," 'Omerta (film)': 'Rajkummar Rao',\n"," 'Raazi': 'Alia Bhatt',\n"," 'Hope Aur Hum': 'Naseeruddin Shah',\n"," 'High Jack (film)': 'Sumeet Vyas',\n"," 'Khajoor Pe Atke': 'Vinay Pathak',\n"," 'Parmanu: The Story of Pokhran': 'John Abraham',\n"," 'Bioscopewala': 'Danny Denzongpa',\n"," 'Bhavesh Joshi Superhero': 'Harshvardhan Kapoor',\n"," 'Phamous': 'Jimmy Sheirgill',\n"," 'Race 3': 'Anil Kapoor',\n"," 'Dhadak': 'Ishaan Khattar',\n"," 'Sanju': 'Ranbir Kapoor',\n"," 'Saheb Biwi Aur Gangster 3': 'Sanjay Dutt',\n"," 'Nawabzaade': 'Dharmesh Yelande',\n"," 'Mulk (film)': 'Taapsee Pannu',\n"," 'Brij Mohan Amar Rahe': 'Arjun Mathur',\n"," 'Karwaan': 'Irrfan Khan',\n"," 'Gold (2018 film)': 'Akshay Kumar',\n"," 'Satyameva Jayate (2018 film)': 'John Abraham',\n"," 'Happy Phirr Bhag Jayegi': 'Sonakshi Sinha',\n"," 'Genius (2018 Hindi film)': 'Utkarsh Sharma',\n"," 'Yamla Pagla Deewana: Phir Se': 'Dharmendra',\n"," 'Stree (2018 film)': 'Rajkummar Rao',\n"," 'Paltan (film)': 'Jackie Shroff',\n"," 'Laila Majnu (2018 film)': 'Avinash Tiwary',\n"," 'Gali Guleiyan': 'Manoj Bajpayee',\n"," 'Halkaa': 'Paoli Dam',\n"," 'Pataakha': 'Sanya Malhotra',\n"," 'Batti Gul Meter Chalu': 'Shahid Kapoor',\n"," 'Love Sonia': 'Abhishek Bharate',\n"," 'Manto (2018 film)': 'Nawazuddin Siddiqui',\n"," 'Ishqeria': 'Manish Anand',\n"," 'Manmarziyaan': 'Taapsee Pannu',\n"," 'Mitron': 'Jackky Bhagnani',\n"," 'Sui Dhaaga': 'Anushka Sharma',\n"," 'Baazaar': 'Radhika Apte',\n"," 'Jalebi (film)': 'Rhea Chakraborty',\n"," 'FryDay': 'Govinda',\n"," 'Tumbbad': 'Sohum Shah',\n"," 'Helicopter Eela': 'Kajol',\n"," 'Namaste England': 'Arjun Kapoor',\n"," 'Andhadhun': 'Ayushmann Khurrana',\n"," 'Badhaai Ho': 'Ayushmann Khurrana',\n"," '5 Weddings': 'Nargis Fakhri',\n"," 'Kaashi in Search of Ganga': 'Aishwarya Devan',\n"," 'Dassehra': 'Neil Nitin Mukesh',\n"," 'The Journey of Karma': 'Shakti Kapoor',\n"," 'Jack and Dil': 'Amit Sadh',\n"," 'Mohalla Assi': 'Sunny Deol',\n"," 'Pihu': 'Rahul Bagga',\n"," 'Bhaiaji Superhit': 'Sunny Deol',\n"," 'Rajma Chawal': 'Amyra Dastur',\n"," 'Zero (2018 film)': 'Shah Rukh Khan',\n"," 'Simmba': 'Ranveer Singh',\n"," 'Tiger Zinda Hai': 'Salman Khan',\n"," 'Golmaal Again': 'Ajay Devgn',\n"," 'Judwaa 2': 'Varun Dhawan',\n"," 'Ok Jaanu': 'Shraddha Kapoor',\n"," 'Coffee with D': 'Sunil Grover',\n"," 'Kaabil': 'Hrithik Roshan',\n"," 'Raees (film)': 'Raj Arjun',\n"," 'Thugs of Hindostan': 'Aamir Khan',\n"," 'Hind Ka Napak Ko Jawab: MSG Lion Heart 2': 'Gurmeet Ram Rahim Singh',\n"," 'Running Shaadi': 'Arsh Bajwa',\n"," 'The Ghazi Attack': 'Rana Daggubati',\n"," 'Irada (2017 film)': 'Naseeruddin Shah',\n"," 'Rangoon (2017 Hindi film)': 'Kangana Ranaut',\n"," 'Wedding Anniversary': 'Nana Patekar',\n"," 'Jeena Isi Ka Naam Hai (film)': 'Arbaaz Khan',\n"," 'Badrinath Ki Dulhania': 'Varun Dhawan',\n"," 'Trapped (2016 Hindi film)': 'Rajkummar Rao',\n"," 'Aa Gaya Hero': 'Govinda',\n"," 'Mantra (2016 film)': 'Rajat Kapoor',\n"," 'Phillauri (film)': 'Anushka Sharma',\n"," 'Machine (2017 film)': 'Kiara Advani',\n"," 'Bhanwarey': 'Shaurya Singh',\n"," 'Anaarkali of Aarah': 'Pankaj Tripathi',\n"," 'Naam Shabana': 'Taapsee Pannu',\n"," 'Hotel Salvation': 'Adil Hussain',\n"," 'Begum Jaan': 'Amitabh Bachchan',\n"," 'Noor (film)': 'Sunny Leone',\n"," 'Ek Thi Rani Aisi Bhi': 'Hema Malini',\n"," 'Maatr': 'Raveena Tandon',\n"," 'Sarkar 3': 'Amitabh Bachchan',\n"," 'Jattu Engineer': 'Amardeep Insan',\n"," 'Half Girlfriend (film)': 'Shraddha Kapoor',\n"," 'Meri Pyaari Bindu': 'Ayushmann Khurrana',\n"," 'Sachin: A Billion Dreams': 'Sachin Tendulkar',\n"," 'Hindi Medium': 'Irrfan Khan',\n"," 'Sweetiee Weds NRI': 'Himansh Kohli',\n"," 'Dobaara: See Your Evil': 'Adil Hussain',\n"," 'Flat 211': 'Jayesh Raj',\n"," 'Dear Maya': 'Manisha Koirala',\n"," 'Raabta (film)': 'Deepika Padukone',\n"," 'Behen Hogi Teri': 'Rajkummar Rao',\n"," 'Tubelight (2017 Hindi film)': 'Salman Khan',\n"," 'Bank Chor': 'Riteish Deshmukh',\n"," 'Ek Haseena Thi Ek Deewana Tha': 'Shiv Darshan',\n"," 'Jagga Jasoos': 'Ranbir Kapoor',\n"," 'Shab (film)': 'Ashish Bisht',\n"," 'Lipstick Under My Burkha': 'Aahana Kumra',\n"," 'Bachche Kachche Sachche': 'Manoj Babani',\n"," 'G Kutta Se': 'Rajveer Ankur Singh',\n"," 'Indu Sarkar': 'Kirti Kulhari',\n"," 'Jab Harry Met Sejal': 'Shah Rukh Khan',\n"," 'Munna Michael': 'Tiger Shroff',\n"," 'Toilet: Ek Prem Katha': 'Akshay Kumar',\n"," 'Mubarakan': 'Anil Kapoor',\n"," 'Guest iin London': 'Kartik Aaryan',\n"," 'Bareilly Ki Barfi': 'Ayushmann Khurrana',\n"," 'Babumoshai Bandookbaaz': 'Nawazuddin Siddiqui',\n"," 'Yadvi – The Dignified Princess': 'Prisha Aneja',\n"," 'Qaidi Band': 'Aadar Jain',\n"," 'Shubh Mangal Saavdhan': 'Ayushmann Khurrana',\n"," 'Raag Desh (film)': 'Kunal Kapoor',\n"," 'Daddy (2017 film)': 'Arjun Rampal',\n"," 'Simran (film)': 'Kangana Ranaut',\n"," 'Lucknow Central': 'Farhan Akhtar',\n"," 'A Gentleman': 'Sidharth Malhotra',\n"," \"Viceroy's House (film)\": 'Hugh Bonneville',\n"," 'Patel Ki Punjabi Shaadi': 'Rishi Kapoor',\n"," 'Newton (film)': 'Rajkummar Rao',\n"," 'The Final Exit': 'Kunaal Roy Kapur',\n"," 'Bhoomi (film)': 'Sunny Leone',\n"," 'Haseena Parkar': 'Shraddha Kapoor',\n"," 'JD (film)': 'Rina Charaniya',\n"," 'Haraamkhor': 'Nawazuddin Siddiqui',\n"," 'Poster Boys': 'Sunny Deol',\n"," 'Mom (film)': 'Sridevi',\n"," 'Chef (2017 film)': 'Saif Ali Khan',\n"," 'Ranchi Diaries': 'Soundarya Sharma',\n"," 'Babuji Ek Ticket Bambai': 'Sudha Chandran',\n"," 'Rukh (film)': 'Manoj Bajpayee',\n"," 'Secret Superstar': 'Zaira Wasim',\n"," 'Aval (2017 film)': 'Prakash Belawadi',\n"," 'Ribbon (film)': 'Kalki Koechlin',\n"," 'Shaadi Mein Zaroor Aana': 'Rajkummar Rao',\n"," 'Jia Aur Jia': 'Richa Chadha',\n"," 'Qarib Qarib Singlle': 'Irrfan Khan',\n"," 'Aksar 2': 'Zareen Khan',\n"," 'Panchlait': 'Nayna Bandhopadhyay',\n"," 'Tumhari Sulu': 'Vidya Balan',\n"," 'Julie 2': 'Nishikant Kamat',\n"," 'Kadvi Hawa': 'Sanjay Mishra',\n"," 'Firangi': 'Kapil Sharma',\n"," 'Fukrey Returns': 'Pulkit Samrat',\n"," 'Monsoon Shootout': 'Vijay Varma',\n"," 'Ajji': 'Sushama Deshpande',\n"," 'Chalk n Duster': 'Richa Chadha',\n"," 'Rebellious Flower': 'Prince Shah',\n"," 'Saankal': 'Tanima Bhattacharya',\n"," 'Airlift (film)': 'Akshay Kumar',\n"," 'Sallu Ki Shaadi': 'Zeenat Aman',\n"," 'Irudhi Suttru': 'Madhavan',\n"," 'Kyaa Kool Hain Hum 3': 'Tusshar Kapoor',\n"," 'Mastizaade': 'Tusshar Kapoor',\n"," 'Dil Jo Na Keh Saka': 'Himansh Kohli',\n"," 'Jugni (2016 film)': 'Sadhana Singh',\n"," 'Ghayal: Once Again': 'Sunny Deol',\n"," 'Fitoor': 'Aditya Roy Kapoor',\n"," 'Sanam Re': 'Rishi Kapoor',\n"," 'Direct Ishq': 'Rajniesh Duggall',\n"," 'Ishq Forever': 'Krishna Chaturvedi',\n"," 'Loveshhuda': 'Girish Taurani',\n"," 'Neerja': 'Sonam Kapoor',\n"," 'Aligarh (film)': 'Sukhesh Arora',\n"," 'Bollywood Diaries': 'Raima Sen',\n"," 'Love Shagun': 'Anuj Sachdeva',\n"," 'Tere Bin Laden: Dead or Alive': 'Parthaa Akerkar',\n"," 'Jai Gangaajal': 'Priyanka Chopra',\n"," 'Kapoor & Sons': 'Sidharth Malhotra',\n"," 'Rocky Handsome': 'John Abraham',\n"," 'Love Games (film)': 'Patralekhaa Paul',\n"," 'Fan (film)': 'Shah Rukh Khan',\n"," 'Nil Battey Sannata': 'Swara Bhaskar',\n"," 'Laal Rang': 'Randeep Hooda',\n"," 'Baaghi (2016 film)': 'Shraddha Kapoor',\n"," 'Global Baba': 'Pankaj Tripathi',\n"," 'Shortcut Safari': 'Jimmy Sheirgill',\n"," 'The Blueberry Hunt': 'Kartik Elangovan',\n"," 'Santa Banta Pvt Ltd': 'Boman Irani',\n"," 'Traffic (2016 film)': 'Manoj Bajpayee',\n"," '1920: London': 'Sharman Joshi',\n"," 'Azhar (film)': 'Emraan Hashmi',\n"," 'Buddha in a Traffic Jam': 'Aanchal Dwivedi',\n"," 'Murari the Mad Gentleman': 'Sanjay Singh',\n"," 'Dear Dad (film)': 'Arvind Swamy',\n"," 'Phobia (2016 film)': 'Radhika Apte',\n"," 'Sarbjit (film)': 'Randeep Hooda',\n"," 'Veerappan (2016 film)': 'Sachiin Joshi',\n"," 'Do Lafzon Ki Kahani (film)': 'Kajal Aggarwal',\n"," 'Te3n': 'Amitabh Bachchan',\n"," 'Udta Punjab': 'Shahid Kapoor',\n"," 'Khel Toh Ab Shuru Hoga': 'Hazel Croney',\n"," 'Luv U Alia': 'V. Ravichandran',\n"," '7 Hours to Go': 'Vipin Sharma',\n"," 'Raman Raghav 2.0': 'Nawazuddin Siddiqui',\n"," 'Junooniyat': 'Pulkit Samrat',\n"," 'Rough Book': 'Tannishtha Chatterjee',\n"," 'Dhanak': 'Krrish Chhabria',\n"," 'Fredrick (film)': 'Avinash Dhyani',\n"," 'Dil Toh Deewana Hai': 'Zeenat Aman',\n"," 'Sultan (2016 film)': 'Salman Khan',\n"," 'Brahman Naman': 'Shashank Arora',\n"," 'Great Grand Masti': 'Urvashi Rautela',\n"," 'Waiting (2015 film)': 'Naseeruddin Shah',\n"," 'Ishq Click': 'Sara Loren',\n"," 'M Cream': 'Tom Alter',\n"," 'Madaari': 'Irrfan Khan',\n"," 'Dishoom': 'John Abraham',\n"," 'Fever (2016 film)': 'Rajeev Khandelwal',\n"," 'Rustom (film)': \"Ileana D'Cruz\",\n"," 'Hai Apna Dil Toh Awara': 'Sahil Anand',\n"," 'Mohenjo Daro (film)': 'Hrithik Roshan',\n"," 'Happy Bhag Jayegi': 'Diana Penty',\n"," 'Waarrior Savitri': 'Niharica Raizada',\n"," 'A Flying Jatt': 'Tiger Shroff',\n"," 'Baar Baar Dekho': 'Sidharth Malhotra',\n"," 'Freaky Ali': 'Nawazuddin Siddiqui',\n"," 'Raaz: Reboot': 'Emraan Hashmi',\n"," 'Pink (2016 film)': 'Taapsee Pannu',\n"," 'Parched': 'Tannishtha Chatterjee',\n"," 'Banjo (2016 film)': 'Riteish Deshmukh',\n"," 'Days of Tafree': 'Yash Soni',\n"," 'Wah Taj': 'Shreyas Talpade',\n"," 'Island City (2015 film)': 'Vinay Pathak',\n"," 'Ek Kahani Julie Ki': 'Jimmy Sharma',\n"," 'M.S. Dhoni: The Untold Story': 'Sushant Singh Rajput',\n"," 'MSG: The Warrior Lion Heart': 'Ashok Insan',\n"," 'Devi (2016 film)': 'RJ Balaji',\n"," 'Motu Patlu: King of Kings': 'Saurav Chakraborty',\n"," 'Anna (2016 film)': 'Shashank Udapurkar',\n"," 'Fuddu': 'Shubham',\n"," 'Saat Uchakkey': 'Manoj Bajpayee',\n"," 'Beiimaan Love': 'Sunny Leone',\n"," 'Umrika': 'Aashish Bhatt',\n"," 'Shivaay': 'Ajay Devgn',\n"," 'Dongari Ka Raja': 'Ronit Roy',\n"," 'Ae Dil Hai Mushkil': 'Ranbir Kapoor',\n"," 'Tum Bin II': 'Neha Sharma',\n"," 'Rock On 2': 'Farhan Akhtar',\n"," 'Force 2': 'John Abraham',\n"," 'Dear Zindagi': 'Alia Bhatt',\n"," 'Befikre': 'Vaani Kapoor',\n"," 'Moh Maya Money': 'Neha Dhupia',\n"," 'Shorgul': 'Jimmy Sheirgill',\n"," 'Saansein': 'Sonarika Bhadoria',\n"," 'Ki & Ka': 'Amitabh Bachchan',\n"," 'Wajah Tum Ho': 'Sharman Joshi',\n"," 'Dangal (film)': 'Aamir Khan',\n"," 'Mirzya (film)': 'Harshvardhan Kapoor',\n"," 'Prem Ratan Dhan Payo': 'Salman Khan',\n"," 'Tanu Weds Manu: Returns': movie\n"," Tanu Weds Manu: Returns    Kangana Ranaut\n"," Tanu Weds Manu: Returns    Kangana Ranaut\n"," Name: lead, dtype: object,\n"," '31st October (film)': 'Soha Ali Khan',\n"," 'ABCD 2': 'Prabhu Deva',\n"," 'Dilwale (2015 film)': 'Shah Rukh Khan',\n"," 'Bajrangi Bhaijaan': 'Salman Khan',\n"," 'Bajirao Mastani': 'Ranveer Singh',\n"," 'Welcome Back (film)': 'Anil Kapoor',\n"," 'Baby (2015 Hindi film)': 'Akshay Kumar',\n"," 'Singh Is Bliing': 'Akshay Kumar',\n"," 'Gabbar Is Back': movie\n"," Gabbar Is Back    Akshay Kumar\n"," Gabbar Is Back    Akshay Kumar\n"," Name: lead, dtype: object,\n"," 'Mumbai Can Dance Saala': 'Shakti Kapoor',\n"," 'Alone (2015 Hindi film)': 'Bipasha Basu',\n"," 'Tevar': 'Arjun Kapoor',\n"," 'Sharafat Gayi Tel Lene': 'Zayed Khan',\n"," 'Dolly Ki Doli': 'Malaika Arora',\n"," 'Hawaizaada': 'Naman Jain',\n"," 'Khamoshiyan': 'Gurmeet Choudhary',\n"," 'Rahasya': 'Kay Kay Menon',\n"," 'Jai Jawaan Jai Kisaan (film)': 'Rati Agnihotri',\n"," 'Shamitabh': 'Amitabh Bachchan',\n"," 'Roy (film)': 'Arjun Rampal',\n"," 'Badlapur (film)': 'Varun Dhawan',\n"," 'Crazy Cukkad Family': 'Swanand Kirkire',\n"," 'Take It Easy (2015 film)': 'Sulabha Arya',\n"," 'Qissa (film)': 'Irrfan Khan',\n"," 'Ab Tak Chhappan 2': 'Nana Patekar',\n"," 'Dum Laga Ke Haisha': 'Ayushmann Khurrana',\n"," 'Dirty Politics (film)': 'Anupam Kher',\n"," 'MSG: The Messenger': 'Gurmeet Ram Rahim Singh',\n"," 'Badmashiyaan': 'Sidhant Gupta',\n"," 'Coffee Bloom': 'Arjun Mathur',\n"," 'Hey Bro': 'Ganesh Acharya',\n"," 'NH10 (film)': 'Anushka Sharma',\n"," 'Hunterrr': 'Gulshan Devaiah',\n"," 'Detective Byomkesh Bakshy!': 'Sushant Singh Rajput',\n"," 'Luckhnowi Ishq': 'Adhyayan Suman',\n"," 'Court (film)': 'Vira Sathidar',\n"," 'Margarita with a Straw': 'Kalki Koechlin',\n"," 'Ek Paheli Leela': 'Sunny Leone',\n"," 'Barkhaa': 'Sara Loren',\n"," 'Mr. X (2015 film)': 'Emraan Hashmi',\n"," 'NH-8 Road to Nidhivan': 'Auroshika Dey',\n"," 'Dilliwali Zaalim Girlfriend': 'Ira Dubey',\n"," 'Dharam Sankat Mein': 'Naseeruddin Shah',\n"," 'Kaagaz Ke Fools': 'Vinay Pathak',\n"," 'Kuch Kuch Locha Hai': 'Ram Kapoor',\n"," 'Piku': 'Deepika Padukone',\n"," 'Bombay Velvet': 'Ranbir Kapoor',\n"," 'I Love Desi': 'Shakti Anand',\n"," 'Dil Dhadakne Do': 'Anil Kapoor',\n"," 'Welcome 2 Karachi': 'Arshad Warsi',\n"," 'P Se PM Tak': 'Meenakshi Dixit',\n"," 'Mere Genie Uncle': 'Yash Acharya',\n"," 'Hamari Adhuri Kahani': 'Rajkummar Rao',\n"," 'Miss Tanakpur Haazir Ho': 'Rahul Bagga',\n"," 'Uvaa': 'Mohit Baghel',\n"," 'Ishq Ke Parindey': 'Rishi Verma',\n"," 'Ishqedarriyaan': 'Mimoh Chakraborty',\n"," 'Sabki Bajegi Band': 'Swara Bhaskar',\n"," 'Masaan': 'Richa Chadha',\n"," 'Guddu Rangeela': 'Arshad Warsi',\n"," 'Bezubaan Ishq': 'Mugdha Godse',\n"," 'Aisa Yeh Jahaan': 'Yashpal Sharma',\n"," 'Second Hand Husband': 'Dharmendra',\n"," 'I Love NY (2015 film)': 'Sunny Deol',\n"," 'Main Hoon Part-Time Killer': 'Smitha Gondkar',\n"," 'Kaun Kitne Paani Mein': 'Kunal Kapoor',\n"," 'Drishyam (2015 film)': 'Ajay Devgn',\n"," 'Bangistan': 'Jacqueline Fernandez',\n"," 'All Is Well (2015 film)': 'Rishi Kapoor',\n"," 'Brothers (2015 film)': 'Akshay Kumar',\n"," 'Gour Hari Dastaan': 'Vinay Pathak',\n"," 'Manjhi – The Mountain Man': 'Nawazuddin Siddiqui',\n"," 'Thoda Lutf Thoda Ishq': 'Bhavita Anand',\n"," 'Phantom (2015 film)': 'Saif Ali Khan',\n"," 'Hero (2015 Hindi film)': 'Suraj Pancholi',\n"," 'Sorry Daddy': 'Shamim Khan',\n"," 'Talvar (film)': 'Irrfan Khan',\n"," 'Katti Batti': 'Suhaas Ahuja',\n"," 'Meeruthiya Gangsters': 'Jaideep Ahlawat',\n"," 'MSG-2 The Messenger': 'Charanpreet Insan',\n"," 'Calendar Girls (2015 film)': 'Akanksha Puri',\n"," 'Bhaag Johnny': 'Kunal Khemu',\n"," 'Jazbaa': 'Aishwarya Rai Bachchan',\n"," 'Bumper Draw': 'Seema Azmi',\n"," 'Chinar Daastaan-E-Ishq': 'Parveen Kaur',\n"," 'Kis Kisko Pyaar Karoon': 'Kapil Sharma',\n"," 'Pyaar Ka Punchnama 2': 'Kartik Aaryan',\n"," 'Wedding Pullav': 'Diganth',\n"," 'Shaandaar': 'Shahid Kapoor',\n"," 'Titli (2014 film)': 'Nawazuddin Siddiqui',\n"," 'Guddu Ki Gun': 'Kunal Khemu',\n"," 'The Silent Heroes': 'Mann Bagga',\n"," 'Ranbanka': 'Manish Paul',\n"," 'Sholay': 'Sanjeev Kumar',\n"," 'Dedh Ishqiya': 'Madhuri Dixit',\n"," 'Karle Pyaar Karle': 'Shiv Darshan',\n"," 'Om-Dar-B-Dar': 'Gopi Desai',\n"," 'Paranthe Wali Gali': 'Mohinder Gujral',\n"," 'Strings of Passion': 'Zeenat Aman',\n"," 'Gunday': 'Ranveer Singh',\n"," 'Jai Ho (film)': 'Salman Khan',\n"," 'Hasee Toh Phasee': 'Sidharth Malhotra',\n"," 'Heartless (2014 film)': 'Adhyayan Suman',\n"," 'Ya Rab': 'Indrapal Ahuja',\n"," 'Darr @ the Mall': 'Jimmy Sheirgill',\n"," 'One by Two (2014 film)': 'Abhay Deol',\n"," 'Babloo Happy Hai': 'Sahil Anand',\n"," 'Highway (2014 Hindi film)': 'Alia Bhatt',\n"," 'Gulabi Gang (film)': 'Sampat Pal Devi',\n"," 'Shaadi Ke Side Effects': 'Farhan Akhtar',\n"," 'Gulaab Gang': 'Madhuri Dixit',\n"," 'Queen (2014 film)': 'Kangana Ranaut',\n"," 'Bewakoofiyaan': 'Ayushmann Khurrana',\n"," 'Total Siyapaa': 'Ali Zafar',\n"," 'Karar: The Deal': 'Mahek Chahal',\n"," 'Lakshmi (2014 film)': 'Monali Thakur',\n"," 'Ragini MMS 2': 'Sunny Leone',\n"," 'Dishkiyaoon': 'Harman Baweja',\n"," 'Ankhon Dekhi': 'Sanjay Mishra',\n"," 'Gang of Ghosts': 'Sharman Joshi',\n"," 'Anuradha (2014 film)': 'Sachin Khedekar',\n"," 'W (2014 film)': 'Leeza Mangaldas',\n"," 'O Teri': 'Pulkit Samrat',\n"," 'Honour Killing (film)': 'Zara Sheikh',\n"," '2 States (2014 film)': 'Arjun Kapoor',\n"," 'Jal (film)': 'Purab Kohli',\n"," 'Bhoothnath Returns': 'Amitabh Bachchan',\n"," 'Main Tera Hero': 'Varun Dhawan',\n"," 'Lucky Kabootar': 'Arvinder Bhatti',\n"," 'Station (2014 film)': 'Kanika Batra',\n"," 'Youngistaan': 'Jackky Bhagnani',\n"," 'Samrat & Co.': 'Rajeev Khandelwal',\n"," 'Purani Jeans': 'Tanuj Virwani',\n"," 'Kya Dilli Kya Lahore': 'Vijay Raaz',\n"," 'Koyelaanchal': 'Kannan Arunachalam',\n"," 'Manjunath (film)': 'Anjori Alagh',\n"," 'Dekh Tamasha Dekh': 'Satish Kaushik',\n"," 'Mastram': 'Rahul Bagga',\n"," 'The Xposé': 'Himesh Reshammiya',\n"," 'Children of War (2014 film)': 'Farooq Shaikh',\n"," 'Hawaa Hawaai': 'Makrand Deshpande',\n"," 'Kahin Hai Mera Pyar': 'Eesha Agarwal',\n"," 'Kuku Mathur Ki Jhand Ho Gayi': 'Siddharth Gupta',\n"," 'Heropanti': 'Tiger Shroff',\n"," 'CityLights (2014 film)': 'Rajkummar Rao',\n"," 'Filmistaan': 'Sharib Hashmi',\n"," 'Revolver Rani': 'Kangana Ranaut',\n"," 'Kaanchi: The Unbreakable': 'Kartik Aaryan',\n"," 'Machhli Jal Ki Rani Hai': 'Swara Bhaskar',\n"," 'Khwaabb': 'Simer Motiani',\n"," 'Yeh Hai Bakrapur': 'Anshuman Jha',\n"," 'Ek Villain': 'Sidharth Malhotra',\n"," 'Bobby Jasoos': 'Vidya Balan',\n"," 'Humshakals': 'Saif Ali Khan',\n"," 'Humpty Sharma Ki Dulhania': 'Varun Dhawan',\n"," 'Hate Story 2': 'Jay Bhanushali',\n"," 'Lekar Hum Deewana Dil': 'Armaan Jain',\n"," 'Riyasat (film)': 'Rajesh Khanna',\n"," 'Amit Sahni Ki List': 'Vir Das',\n"," 'Holiday: A Soldier Is Never Off Duty': 'Akshay Kumar',\n"," 'Fugly (film)': 'Jimmy Sheirgill',\n"," 'Bazaar E Husn': 'Reshmi Ghosh',\n"," 'Pizza (2014 film)': 'Akshay Oberoi',\n"," 'Entertainment (2014 film)': 'Akshay Kumar',\n"," 'Singham Returns': 'Anupam Kher',\n"," 'Mardaani': 'Rani Mukerji',\n"," 'Raja Natwarlal': 'Emraan Hashmi',\n"," 'Mary Kom (film)': 'Priyanka Chopra',\n"," 'Creature 3D': 'Bipasha Basu',\n"," 'Finding Fanny': 'Deepika Padukone',\n"," 'Khoobsurat (2014 film)': 'Sonam Kapoor',\n"," '3 A.M. (2014 film)': 'Salil Acharya',\n"," 'Kick (2014 film)': 'Salman Khan',\n"," 'Mad About Dance': 'Saahil Prem',\n"," 'Mumbhai Connection': 'Alieesa P Badresia',\n"," 'Life Is Beautiful (2014 film)': 'Manoj Amarnani',\n"," 'Desi Kattey': 'Sasha Aagha',\n"," 'Haider (film)': 'Tabu',\n"," 'Bang Bang!': 'Hrithik Roshan',\n"," 'Spark (2014 film)': 'Rati Agnihotri',\n"," 'Daawat-e-Ishq': 'Aditya Roy Kapoor',\n"," 'Balwinder Singh Famous Ho Gaya': 'Asrani',\n"," 'Jigariyaa': 'Harshvardhan Deo',\n"," 'Tamanchey': 'Nikhil Dwivedi',\n"," 'Mumbai 125 KM': 'Karanvir Bohra',\n"," 'Meinu Ek Ladki Chaahiye': 'Puru Chibber',\n"," 'Chaarfutiya Chhokare': 'Soha Ali Khan',\n"," 'Sonali Cable': 'Rhea Chakraborty',\n"," 'Happy New Year (2014 film)': 'Shah Rukh Khan',\n"," 'Super Nani': 'Rekha',\n"," 'Ekkees Toppon Ki Salaami': 'Anupam Kher',\n"," 'Rang Rasiya': 'Randeep Hooda',\n"," 'The Shaukeens': 'Akshay Kumar',\n"," 'Roar: Tigers of the Sundarbans': 'Aadil Chahal',\n"," 'A Decent Arrangement': 'Shabana Azmi',\n"," 'Gollu Aur Pappu': 'Dimple Kapadia',\n"," 'Titoo MBA': 'Nishant Dahiya',\n"," 'Kill Dil': 'Ranveer Singh',\n"," 'Ungli': 'Emraan Hashmi',\n"," 'Happy Ending (film)': 'Saif Ali Khan',\n"," 'Zed Plus': 'Vinod Acharya',\n"," 'Zid (2014 film)': 'Mannara Chopra',\n"," 'Action Jackson (2014 film)': 'Prabhas',\n"," 'Bhopal: A Prayer for Rain': 'Mischa Barton',\n"," 'Mumbai Delhi Mumbai': 'Shiv Panditt',\n"," 'Badlapur Boys': 'Annu Kapoor',\n"," 'Main Aur Mr. Riight': 'Barun Sobti',\n"," 'Ugly (film)': 'Rahul Bhat',\n"," 'PK (film)': 'Aamir Khan',\n"," 'Dehraadun Diary': 'Adhyayan Suman',\n"," 'Matru Ki Bijlee Ka Mandola': 'Imran Khan',\n"," 'Sulemani Keeda': 'Naveen Kasturia',\n"," 'Inkaar (2013 film)': 'Arjun Rampal',\n"," 'Gangoobai': 'Sarita Joshi',\n"," 'Akaash Vani': 'Kartik Aaryan',\n"," 'Main Krishna Hoon': 'Juhi Chawla',\n"," 'Race 2': 'Saif Ali Khan',\n"," 'Bandook': 'Manisha Kelkar',\n"," 'Listen... Amaya': 'Farooq Shaikh',\n"," 'Special 26': 'Akshay Kumar',\n"," 'Murder 3': 'Randeep Hooda',\n"," 'Zila Ghaziabad': 'Vivek Oberoi',\n"," 'Kai Po Che!': 'Rajkummar Rao',\n"," 'Bloody Isshq': 'Akash',\n"," 'Saare Jahaan Se Mehnga': 'Vishwa Mohan Badola',\n"," '3G (film)': 'Neil Nitin Mukesh',\n"," 'Mere Dad Ki Maruti': 'Saqib Saleem',\n"," 'Jolly LLB': 'Arshad Warsi',\n"," 'Saheb Biwi Aur Gangster Returns': 'Jimmy Sheirgill',\n"," 'Mai (2013 film)': 'Asha Bhosle',\n"," 'Vishwaroopam': 'Kamal Haasan',\n"," 'Rangrezz': 'Jackky Bhagnani',\n"," 'Aashiqui 2': 'Aditya Roy Kapoor',\n"," 'Ek Thi Daayan': 'Emraan Hashmi',\n"," 'Himmatwala (2013 film)': 'Ajay Devgn',\n"," 'Nautanki Saala!': 'Ayushmann Khurrana',\n"," 'Jayantabhai Ki Luv Story': 'Vivek Oberoi',\n"," 'Commando: A One Man Army': 'Vidyut Jammwal',\n"," 'Bombay Talkies (film)': 'Rani Mukerji',\n"," 'Go Goa Gone': 'Saif Ali Khan',\n"," 'Gippi': 'Riya Vij',\n"," 'Aurangzeb (film)': 'Arjun Kapoor',\n"," 'Ishkq in Paris': 'Preity Zinta',\n"," 'Zindagi 50-50': 'Veena Malik',\n"," 'Yeh Jawaani Hai Deewani': 'Ranbir Kapoor',\n"," 'Fukrey': 'Pulkit Samrat',\n"," 'Chhota Bheem and the Throne of Bali': 'Rupa Bhimani',\n"," 'Raanjhanaa': 'Dhanush',\n"," 'Ankur Arora Murder Case': 'Kay Kay Menon',\n"," 'Shortcut Romeo': 'Neil Nitin Mukesh',\n"," 'Ghanchakkar (film)': 'Vidya Balan',\n"," 'Hum Hai Raahi Car Ke': 'Anupam Kher',\n"," 'Policegiri': 'Sanjay Dutt',\n"," 'Bhaag Milkha Bhaag': 'Farhan Akhtar',\n"," 'Sixteen (2013 Indian film)': 'Wamiqa Gabbi',\n"," 'B.A. Pass': 'Shadab Kamal',\n"," 'Enemmy': 'Sunil Shetty',\n"," 'Issaq': 'Prateik',\n"," 'Bajatey Raho': 'Tusshar Kapoor',\n"," 'Luv U Soniyo': 'Tanuj Virwani',\n"," 'Nasha (film)': 'Poonam Pandey',\n"," 'Chor Chor Super Chor': 'Deepak Dobriyal',\n"," 'Calapor (film)': 'Hemant Gopal',\n"," 'Love in Bombay': 'Joy Mukherjee',\n"," 'D-Day (2013 film)': 'Rishi Kapoor',\n"," 'Siddharth (2013 film)': 'Rajesh Tailang',\n"," 'Once Upon ay Time in Mumbai Dobaara!': 'Akshay Kumar',\n"," 'Madras Cafe': 'John Abraham',\n"," 'Satyagraha (film)': 'Amitabh Bachchan',\n"," 'Shuddh Desi Romance': 'Sushant Singh Rajput',\n"," 'Ramaiya Vastavaiya': 'Shruti Haasan',\n"," 'Chennai Express': 'Deepika Padukone',\n"," 'Grand Masti': 'Vivek Oberoi',\n"," 'John Day (film)': 'Naseeruddin Shah',\n"," 'Horror Story (film)': 'Karan Kundrra',\n"," 'Phata Poster Nikhla Hero': 'Shahid Kapoor',\n"," 'Ship of Theseus (film)': 'Aida Elkashef',\n"," 'The Lunchbox': 'Irrfan Khan',\n"," 'Baat Bann Gayi': 'Anisa Butt',\n"," 'Boss (2013 Hindi film)': 'Akshay Kumar',\n"," 'Shahid (film)': 'Rajkummar Rao',\n"," 'Mickey Virus': 'Manish Paul',\n"," 'Satya 2': 'Puneet Singh Ratn',\n"," 'Rajjo': 'Kangana Ranaut',\n"," 'Maazii': 'Sumit Nijhawan',\n"," 'Sooper Se Ooper': 'Tinnu Anand',\n"," 'Prague (2013 film)': 'Chandan Roy Sanyal',\n"," 'Wake Up India': 'Elisha Kriis',\n"," 'Super Model (film)': 'Ashmit Patel',\n"," 'Gori Tere Pyaar Mein': 'Imran Khan',\n"," 'What the Fish': 'Manu Rishi Chadha',\n"," 'Jackpot (2013 film)': 'Naseeruddin Shah',\n"," 'Table No. 21': 'Paresh Rawal',\n"," 'Bullett Raja': 'Saif Ali Khan',\n"," 'Dhoom 3': 'Aamir Khan',\n"," 'Chashme Baddoor (2013 film)': 'Ali Zafar',\n"," 'Lootera': 'Ranveer Singh',\n"," 'War Chhod Na Yaar': 'Sharman Joshi',\n"," 'Chaalis Chauraasi': 'Naseeruddin Shah',\n"," 'Ghost (2012 film)': 'Shiney Ahuja',\n"," 'Sadda Adda': 'Karan Sharma',\n"," 'Singh Saab the Great': 'Sunny Deol',\n"," 'Goliyon Ki Raasleela Ram-Leela': 'Ranveer Singh',\n"," 'Agneepath (2012 film)': 'Hrithik Roshan',\n"," 'Ek Main Aur Ekk Tu': 'Kareena Kapoor',\n"," 'Ekk Deewana Tha': 'Prateik',\n"," '?: A Question Mark': 'Kiran Bhatia',\n"," 'Jodi Breakers': 'Bipasha Basu',\n"," 'Tere Naal Love Ho Gaya': 'Riteish Deshmukh',\n"," 'Staying Alive (2012 film)': 'Jahangir Khan',\n"," 'Paan Singh Tomar (film)': 'Irrfan Khan',\n"," 'Kahaani': 'Vidya Balan',\n"," 'Zindagi Tere Naam': 'Mithun Chakraborty',\n"," 'Agent Vinod (2012 film)': 'Kareena Kapoor',\n"," 'Blood Money (2012 film)': 'Manish Chaudhary',\n"," 'Bumboo': 'Kavin Dave',\n"," \"Valentine's Night\": 'Shikhi Gupta',\n"," 'Married 2 America': 'Archana Joglekar',\n"," 'Chaar Din Ki Chandni': 'Tusshar Kapoor',\n"," 'Bittoo Boss': 'Pulkit Samrat',\n"," 'Vicky Donor': 'Ayushmann Khurrana',\n"," 'Hate Story': 'Nikhil Dwivedi',\n"," 'Tezz': 'Anil Kapoor',\n"," 'Dangerous Ishhq': 'Karisma Kapoor',\n"," 'Ishaqzaade': 'Arjun Kapoor',\n"," 'Department (film)': 'Sanjay Dutt',\n"," 'Fatso!': 'Gul Panag',\n"," 'Arjun: The Warrior Prince': 'Yudhveer Bakoliya',\n"," 'Life Ki Toh Lag Gayi': 'Kay Kay Menon',\n"," 'Shanghai (2012 film)': 'Emraan Hashmi',\n"," 'Ferrari Ki Sawaari': 'Sharman Joshi',\n"," 'Teri Meri Kahaani (film)': 'Shahid Kapoor',\n"," 'Mr. Bhatti on Chutti': 'Anupam Kher',\n"," 'Yeh Khula Aasmaan': 'Anya Anand',\n"," 'Rakhtbeej': 'Julia Datt',\n"," 'Gangs of Wasseypur': 'Manoj Bajpayee',\n"," 'Gangs of Wasseypur – Part 2': 'Manoj Bajpayee',\n"," 'Cocktail (2012 film)': 'Saif Ali Khan',\n"," 'Gattu': 'Naresh Sharma',\n"," 'Kyaa Super Kool Hain Hum': 'Riteish Deshmukh',\n"," 'Maximum (film)': 'Sonu Sood',\n"," 'Paanch Ghantey Mien Paanch Crore': 'Nassar Abdulla',\n"," 'Ek Tha Tiger': 'Salman Khan',\n"," 'Challo Driver': 'Vickrant Mahajan',\n"," 'Shirin Farhad Ki Toh Nikal Padi': 'Freny Bhagat',\n"," 'Joker (2012 film)': 'Akshay Kumar',\n"," 'Aalaap (film)': 'Omkar Das Manikpuri',\n"," 'Mere Dost Picture Abhi Baki Hai': 'Sunil Shetty',\n"," 'Krishna Aur Kans': 'Manoj Bajpayee',\n"," 'From Sydney with Love': 'Bidita Bag',\n"," 'Jalpari: The Desert Mermaid': 'Harish Chabbra',\n"," 'Barfi!': 'Ranbir Kapoor',\n"," 'Heroine (2012 film)': 'Kareena Kapoor',\n"," 'Chal Pichchur Banate Hain': 'Sagar Bhangade',\n"," 'Kismat Love Paisa Dilli': 'Vivek Oberoi',\n"," 'Jeena Hai Toh Thok Daal': 'Ravi Kishan',\n"," 'OMG – Oh My God!': 'Paresh Rawal',\n"," 'Aiyyaa': 'Rani Mukerji',\n"," 'Chittagong (film)': 'Manoj Bajpayee',\n"," 'Bhoot Returns': 'J.D. Chakravarthi',\n"," 'Delhi Safari': 'Cary Elwes',\n"," 'Chakravyuh (2012 film)': 'Arjun Rampal',\n"," 'Student of the Year': 'Alia Bhatt',\n"," 'Ajab Gazabb Love': 'Jackky Bhagnani',\n"," 'Rush (2012 film)': 'Emraan Hashmi',\n"," '1920: The Evil Returns': 'Vicky Ahuja',\n"," 'Sons of Ram': 'Sunidhi Chauhan',\n"," 'Ata Pata Laapata': 'Asrani',\n"," 'Jab Tak Hai Jaan': 'Shah Rukh Khan',\n"," 'Talaash: The Answer Lies Within': 'Aamir Khan',\n"," 'Login (film)': 'Himanshu Bhatt',\n"," 'Son of Sardaar': 'Ajay Devgn',\n"," 'Cigarette Ki Tarah': 'Ashok Banthia',\n"," 'Dabangg 2': 'Salman Khan',\n"," 'Players (2012 film)': 'Vinod Khanna',\n"," 'Housefull 2': 'Akshay Kumar',\n"," 'Bol Bachchan': 'Amitabh Bachchan',\n"," 'English Vinglish': 'Sridevi',\n"," 'Impatient Vivek': 'Vivek Sudershan',\n"," 'Yamla Pagla Deewana': 'Nafisa Ali',\n"," 'Mumbai Mast Kallander': 'Mohsin',\n"," 'Dhobi Ghat (film)': 'Prateik',\n"," 'Turning 30': 'Gul Panag',\n"," 'Hostel (2011 film)': 'Vatsal Sheth',\n"," 'Dil Toh Baccha Hai Ji': 'Ajay Devgn',\n"," 'United Six': 'Russell Geoffrey Banks',\n"," 'Utt Pataang': 'Vinay Pathak',\n"," 'Patiala House (film)': 'Rishi Kapoor',\n"," '7 Khoon Maaf': 'Priyanka Chopra',\n"," 'Tanu Weds Manu': 'Madhavan',\n"," 'F.A.L.T.U': 'Arshad Warsi',\n"," 'Memories in March': 'Deepti Naval',\n"," 'Thank You (2011 film)': 'Akshay Kumar',\n"," 'Angel (2011 film)': 'Sumit Arora',\n"," 'Happy Husbands (2011 film)': 'Anay',\n"," 'Teen Thay Bhai': 'Om Puri',\n"," 'Dum Maaro Dum (film)': 'Abhishek Bachchan',\n"," 'Shor in the City': 'Sendhil Ramamurthy',\n"," 'Zokkomon': 'Darsheel Safary',\n"," 'Chalo Dilli': 'Vinay Pathak',\n"," 'Aashiqui.in': 'Ishaan Manhaas',\n"," 'Satrangee Parachute': 'Sanjay Mishra',\n"," 'Monica (film)': 'Ashutosh Rana',\n"," 'I Am (2010 Indian film)': 'Juhi Chawla',\n"," 'Naughty @ 40': 'Govinda',\n"," 'Haunted – 3D': 'Mimoh Chakraborty',\n"," 'Love U...Mr. Kalakaar!': 'Tusshar Kapoor',\n"," 'Ragini MMS': 'Kainaz Motivala',\n"," 'Stanley Ka Dabba': 'Partho A. Gupte',\n"," 'Shagird (2011 film)': 'Nana Patekar',\n"," '404 (film)': 'Sara Arjun',\n"," 'Shaitan (film)': 'Kalki Koechlin',\n"," 'Pyaar Ka Punchnama': 'Kartik Aaryan',\n"," 'Bheja Fry 2': 'Vinay Pathak',\n"," 'Always Kabhi Kabhi': 'Lillete Dubey',\n"," 'Double Dhamaal': 'Sanjay Dutt',\n"," 'Bbuddah... Hoga Terra Baap': 'Amitabh Bachchan',\n"," 'Delhi Belly (film)': 'Imran Khan',\n"," 'Murder 2': 'Emraan Hashmi',\n"," 'Chillar Party': 'Aarav Khanna',\n"," 'Zindagi Na Milegi Dobara': 'Hrithik Roshan',\n"," 'Dear Friend Hitler': 'Raghuvir Yadav',\n"," 'I Am Kalam': 'Gulshan Grover',\n"," 'Bin Bulaye Baraati': 'Naushaad Abbas',\n"," 'Kucch Luv Jaisaa': 'Shefali Shah',\n"," 'Singham': 'Ajay Devgn',\n"," 'Khap (film)': 'Rahul Jaiswal',\n"," 'Bubble Gum (film)': 'Apoorva Arora',\n"," 'Shabri': 'Isha Koppikar',\n"," 'Phhir': 'Rajniesh Duggall',\n"," 'Aarakshan': 'Amitabh Bachchan',\n"," 'Chatur Singh Two Star': 'Sanjay Dutt',\n"," 'Sahi Dhandhe Galat Bande': 'Anupam Kher',\n"," 'Bodyguard (2011 Hindi film)': 'Salman Khan',\n"," 'Yeh Dooriyan': 'Deepshika Nagpal',\n"," 'Not a Love Story (2011 film)': 'Deepak Dobriyal',\n"," 'Hum Tum Shabana': 'Tusshar Kapoor',\n"," 'Mummy Punjabi': 'Kiron Kher',\n"," 'Mere Brother Ki Dulhan': 'Imran Khan',\n"," 'Mausam (2011 film)': 'Shahid Kapoor',\n"," 'U R My Jaan': 'Mikaal',\n"," 'Force (2011 film)': 'John Abraham',\n"," 'Saheb Biwi Aur Gangster': 'Jimmy Sheirgill',\n"," 'Tere Mere Phere': 'Vinay Pathak',\n"," 'Breakaway (2011 film)': 'Vinay Virmani',\n"," 'Chargesheet (film)': 'Dev Anand',\n"," 'Love Breakups Zindagi': 'Zayed Khan',\n"," 'Mujhse Fraaandship Karoge': 'Saqib Saleem',\n"," 'Aazaan': 'Sachiin Joshi',\n"," 'Ra.One': 'Shah Rukh Khan',\n"," 'Rockstar (2011 film)': 'Ranbir Kapoor',\n"," 'Miley Naa Miley Hum': 'Chirag Paswan',\n"," 'Tell Me O Kkhuda': 'Dharmendra',\n"," 'Damadamm!': 'Himesh Reshammiya',\n"," 'Ladies vs Ricky Bahl': 'Ranveer Singh',\n"," 'Desi Boyz': 'Akshay Kumar',\n"," 'Game (2011 film)': 'Abhishek Bachchan',\n"," 'No One Killed Jessica': 'Rani Mukerji',\n"," 'Rascals (2011 film)': 'Ajay Devgn',\n"," 'The Dirty Picture': 'Vidya Balan',\n"," 'Pyaar Impossible!': 'Priyanka Chopra',\n"," 'Chance Pe Dance': 'Shahid Kapoor',\n"," 'My Friend Pinto': 'Prateik',\n"," 'Veer (2010 film)': 'Salman Khan',\n"," 'Striker (2010 film)': 'Siddharth',\n"," 'Rann (film)': 'Amitabh Bachchan',\n"," 'Ishqiya': 'Vidya Balan',\n"," 'Road to Sangam': 'Paresh Rawal',\n"," 'Jo Hum Chahein': 'Sunny Gill',\n"," 'Click (2010 film)': 'Shreyas Talpade',\n"," 'Toh Baat Pakki!': 'Tabu',\n"," 'My Name Is Khan': 'Shah Rukh Khan',\n"," 'Teen Patti (film)': 'Amitabh Bachchan',\n"," 'Karthik Calling Karthik': 'Siddhartha Gupta',\n"," 'Don 2': 'Shah Rukh Khan',\n"," 'Rokkk': 'Tanushree Dutta',\n"," 'Aakhari Decision': 'Paul Sidhu',\n"," 'Right Yaaa Wrong': 'Sunny Deol',\n"," 'Sukhmani: Hope for Life': 'Gurdas Maan',\n"," 'Thanks Maa': 'Master Shams',\n"," 'Na Ghar Ke Na Ghaat Ke': 'Om Puri',\n"," 'Trump Card (film)': 'Vikrum Kumar',\n"," 'Shaapit': 'Aditya Narayan',\n"," 'Hum Tum Aur Ghost': 'Arshad Warsi',\n"," 'Well Done Abba': 'Boman Irani',\n"," 'Tum Milo Toh Sahi': 'Nana Patekar',\n"," 'Jaane Kahan Se Aayi Hai': 'Priyanka Chopra',\n"," 'Prem Kaa Game': 'Arbaaz Khan',\n"," 'Sadiyaan': 'Rekha',\n"," 'The Japanese Wife': 'Rahul Bose',\n"," 'Paathshaala': 'Nana Patekar',\n"," 'Phoonk 2': 'Sudeep',\n"," 'Lahore (film)': 'Farooq Shaikh',\n"," 'Apartment (film)': 'Rohit Roy',\n"," 'City of Gold (2010 film)': 'Sachin Khedekar',\n"," 'Chase (2010 film)': 'Anuj Saxena',\n"," 'Housefull (2010 film)': 'Akshay Kumar',\n"," 'Mittal v/s Mittal': 'Hazel Croney',\n"," \"It's a Wonderful Afterlife\": 'Sanjeev Bhaskar',\n"," 'Prince (2010 film)': 'Vivek Oberoi',\n"," 'Raavan': 'Abhishek Bachchan',\n"," 'Bumm Bumm Bole': 'Atul Kulkarni',\n"," 'Kushti (film)': 'Rajpal Yadav',\n"," 'Kites (film)': 'Hrithik Roshan',\n"," 'Love Sex Aur Dhokha': 'Nushrat Bharucha',\n"," 'Milenge Milenge': 'Kareena Kapoor',\n"," 'Ek Second... Jo Zindagi Badal De?': 'Bhushan Agarwal',\n"," 'Mr. Singh Mrs. Mehta': 'Prashant Narayanan',\n"," 'Lamhaa': 'Sanjay Dutt',\n"," 'Khatta Meetha (2010 film)': 'Akshay Kumar',\n"," 'Tere Bin Laden': 'Ali Zafar',\n"," 'Udaan (2010 film)': 'Rajat Barmecha',\n"," 'Once Upon a Time in Mumbaai': 'Ajay Devgn',\n"," 'Help (film)': 'Bobby Deol',\n"," 'Peepli Live': 'Omkar Das Manikpuri',\n"," 'Lafangey Parindey': 'Neil Nitin Mukesh',\n"," 'Hello Darling': 'Gul Panag',\n"," 'Antardwand': 'Raj Singh Chaudhary',\n"," 'Aashayein': 'John Abraham',\n"," 'Soch Lo': 'Barkha Madan',\n"," 'Dabangg': 'Salman Khan',\n"," 'Khichdi: The Movie': 'Supriya Pathak',\n"," 'Red Alert: The War Within': 'Sunil Shetty',\n"," 'Life Express (2010 film)': 'Rituparna Sengupta',\n"," 'The Film Emotional Atyachar': 'Ranvir Shorey',\n"," 'Hisss': 'Mallika Sherawat',\n"," 'Crook (film)': 'Emraan Hashmi',\n"," 'Do Dooni Chaar': 'Rishi Kapoor',\n"," 'Aakrosh (2010 film)': 'Ajay Devgn',\n"," 'Ramayana: The Epic': 'Manoj Bajpayee',\n"," 'Knock Out (2010 film)': 'Sanjay Dutt',\n"," 'Jhootha Hi Sahi': 'John Abraham',\n"," 'Guzaarish (film)': 'Hrithik Roshan',\n"," 'Allah Ke Banday': 'Varun Bhagwat',\n"," 'Break Ke Baad': 'Deepika Padukone',\n"," 'Khuda Kasam': 'Sunny Deol',\n"," 'Phas Gaye Re Obama': 'Rajat Kapoor',\n"," 'Malik Ek': 'Akanksha',\n"," 'A Flat (film)': 'Jimmy Sheirgill',\n"," 'No Problem (2010 film)': 'Sanjay Dutt',\n"," 'Band Baaja Baaraat': 'Ranveer Singh',\n"," 'Kaalo': 'Aditya Srivastava',\n"," 'Mirch': 'Arunoday Singh',\n"," 'Tees Maar Khan (2010 film)': 'Akshay Kumar',\n"," 'Isi Life Mein': 'Akshay Oberoi',\n"," 'Toonpur Ka Super Hero': 'Ajay Devgn',\n"," 'Tera Kya Hoga Johnny': 'Neil Nitin Mukesh',\n"," 'Ramaa: The Saviour': 'Sahil Khan',\n"," 'I Hate Luv Storys': 'Imran Khan',\n"," 'Dulha Mil Gaya': 'Sushmita Sen',\n"," 'Anjaana Anjaani': 'Priyanka Chopra',\n"," 'Dunno Y... Na Jaane Kyon': 'Zeenat Aman',\n"," 'Pankh': 'Bipasha Basu',\n"," 'Action Replayy': 'Akshay Kumar',\n"," '3 Idiots': 'Aamir Khan',\n"," 'Luck by Chance': 'Farhan Akhtar',\n"," 'Love Aaj Kal': 'Saif Ali Khan',\n"," 'Wanted (2009 film)': 'Salman Khan',\n"," 'Delhi-6': 'Waheeda Rehman',\n"," 'Raaz: The Mystery Continues': 'Kangana Ranaut',\n"," 'Aasma: The Sky Is the Limit': 'Hrishitaa Bhatt',\n"," 'Ajab Prem Ki Ghazab Kahani': 'Ranbir Kapoor',\n"," 'Chal Chala Chal': 'Asrani',\n"," 'Billu': 'Irrfan Khan',\n"," 'The Stoneman Murders': 'Kay Kay Menon',\n"," 'Kisse Pyaar Karoon': 'Arshad Warsi',\n"," 'Dhoondte Reh Jaaoge': 'Paresh Rawal',\n"," 'Karma Aur Holi': 'Rati Agnihotri',\n"," 'Victory (2009 film)': 'Harman Baweja',\n"," 'Kaminey': 'Shahid Kapoor',\n"," 'Jai Veeru': 'Fardeen Khan',\n"," 'Little Zizou': 'John Abraham',\n"," 'Gulaal (film)': 'Kay Kay Menon',\n"," 'Aloo Chaat (film)': 'Aftab Shivdasani',\n"," 'Barah Aana': 'Naseeruddin Shah',\n"," 'Firaaq': 'Inaamulhaq',\n"," 'Aa Dekhen Zara': 'Neil Nitin Mukesh',\n"," '99 (2009 film)': 'Kunal Khemu',\n"," 'Ek: The Power of One': 'Bobby Deol',\n"," 'Ek Se Bure Do': 'Anita',\n"," 'Sikandar (2009 film)': 'Parzaan Dastur',\n"," 'Zor Lagaa Ke...Haiya!': 'Meghan Jadhav',\n"," 'Paying Guests': 'Shreyas Talpade',\n"," 'New York (2009 film)': 'John Abraham',\n"," 'Sankat City': 'Kay Kay Menon',\n"," 'Shortkut': 'Sanjay Dutt',\n"," 'Luck (2009 film)': 'Mithun Chakraborty',\n"," 'Life Partner': 'Govinda',\n"," 'Daddy Cool (2009 Hindi film)': 'Sunil Shetty',\n"," 'Kisaan': 'Jackie Shroff',\n"," 'Yeh Mera India': 'Anupam Kher',\n"," 'Aagey Se Right': 'Shreyas Talpade',\n"," 'Chintu Ji': 'Rishi Kapoor',\n"," 'Quick Gun Murugun': 'Rajendra Prasad',\n"," 'Fox (film)': 'Arjun Rampal',\n"," 'Baabarr': 'Mithun Chakraborty',\n"," 'Phir Kabhi': 'Mithun Chakraborty',\n"," 'Vaada Raha': 'Bobby Deol',\n"," 'Dil Bole Hadippa!': 'Shahid Kapoor',\n"," \"What's Your Raashee?\": 'Harman Baweja',\n"," 'Acid Factory': 'Fardeen Khan',\n"," 'All the Best: Fun Begins': 'Sanjay Dutt',\n"," 'Wake Up Sid': 'Ranbir Kapoor',\n"," 'Main Aurr Mrs Khanna': 'Salman Khan',\n"," 'Blue (2009 film)': 'Akshay Kumar',\n"," 'Fruit and Nut (film)': 'Atmaram Bhende',\n"," 'Aladin (film)': 'Amitabh Bachchan',\n"," 'London Dreams': 'Salman Khan',\n"," 'Jail (2009 film)': 'Manoj Bajpayee',\n"," 'Tum Mile': 'Emraan Hashmi',\n"," 'Kurbaan (2009 film)': 'Lewis Tan',\n"," 'De Dana Dan': 'Akshay Kumar',\n"," 'Paa (film)': 'Amitabh Bachchan',\n"," 'Rocket Singh: Salesman of the Year': 'Ranbir Kapoor',\n"," 'Raat Gayi Baat Gayi?': 'Aamir Bashir',\n"," 'Accident on Hill Road': 'Farooq Shaikh',\n"," 'Chandni Chowk to China': 'Mithun Chakraborty',\n"," 'Dostana (2008 film)': 'Abhishek Bachchan',\n"," 'Race (2008 film)': 'Saif Ali Khan',\n"," 'Rab Ne Bana Di Jodi': 'Shah Rukh Khan',\n"," 'Ghajini (2008 film)': 'Aamir Khan',\n"," 'Singh Is Kinng': 'Akshay Kumar',\n"," 'Golmaal Returns': 'Ajay Devgn',\n"," 'Jodhaa Akbar': 'Hrithik Roshan',\n"," 'Bachna Ae Haseeno': 'Ranbir Kapoor',\n"," 'Bhoothnath': 'Amitabh Bachchan',\n"," 'Sarkar Raj': 'Amitabh Bachchan',\n"," 'Halla Bol': 'Ajay Devgn',\n"," 'Humne Jeena Seekh Liya': 'Omkar Bhatkar',\n"," 'Bombay to Bangkok': 'Shreyas Talpade',\n"," 'Tulsi (film)': 'Manisha Koirala',\n"," 'Sunday (2008 film)': 'Ajay Devgn',\n"," 'One Two Three': 'Tusshar Kapoor',\n"," 'Krazzy 4': 'Juhi Chawla',\n"," 'U Me Aur Hum': 'Ajay Devgn',\n"," 'Sirf (film)': 'Kay Kay Menon',\n"," 'Tashan (film)': 'Akshay Kumar',\n"," 'Anamika (2008 film)': 'Dino Morea',\n"," 'Jimmy (2008 film)': 'Mimoh Chakraborty',\n"," 'Jannat (film)': 'Emraan Hashmi',\n"," 'Don Muthu Swami': 'Mithun Chakraborty',\n"," 'Woodstock Villa': 'Sikander Kher',\n"," ...}"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["##memership opreator it is valid on indexes only but want to check in value use .value\n","'Krazzy 4' in movies"],"metadata":{"id":"zRf-a97AjjEj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1742656713956,"user_tz":-345,"elapsed":72,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"2a680fcd-1cd6-40bd-e54b-32aad88cd081"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["'Dilwale ' in movies"],"metadata":{"id":"gxKNo8LKjjGI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1742656733559,"user_tz":-345,"elapsed":12,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"c43b1268-6712-4754-a303-288c3301c2fe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["'Ajay Devgn' in movies.values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u_eqAUp5chg7","executionInfo":{"status":"ok","timestamp":1742656946799,"user_tz":-345,"elapsed":10,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"6de2a872-7e9b-4c1b-c7ee-eae5bcd3e896"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["#looping in series it works for values but  can use .index\n","for i in movies:\n","  print(i)"],"metadata":{"id":"bB5M443gjjJf","colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"executionInfo":{"status":"ok","timestamp":1742657148790,"user_tz":-345,"elapsed":28,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"0eaffced-e3fd-4fa3-bb69-1d51069ed1bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Vicky Kaushal\n","Vicky Ahuja\n","Anupam Kher\n","Emraan Hashmi\n","Mona Ambegaonkar\n","Geetika Vidya Ohlyan\n","Arshad Warsi\n","Radhika Apte\n","Kangana Ranaut\n","Nawazuddin Siddiqui\n","Ali Asgar\n","Ranveer Singh\n","Prit Kamani\n","Ajay Devgn\n","Sushant Singh Rajput\n","Amitabh Bachchan\n","Abhimanyu Dasani\n","Talha Arshad Reshi\n","Nawazuddin Siddiqui\n","Garima Agarwal\n","Rasika Agashe\n","Barun Sobti\n","Akshay Kumar\n","Zaheer Iqbal\n","Vidyut Jammwal\n","Deepika Amin\n","Manav Kaul\n","Naseeruddin Shah\n","Varun Dhawan\n","Shreyas Talpade\n","Tiger Shroff\n","Boman Irani\n","Ajay Devgn\n","Arjun Kapoor\n","Gavie Chahal\n","Prabhu Deva\n","Shahid Kapoor\n","Ayushmann Khurrana\n","Anupam Kher\n","Karanvir Bohra\n","Hrithik Roshan\n","Jimmy Sheirgill\n","John Abraham\n","Rishi Kapoor\n","Kangana Ranaut\n","Natalia Janoszek\n","Diljit Dosanjh\n","Sidharth Malhotra\n","Rajeev Khandelwal\n","Zaira Wasim\n","Akshay Kumar\n","Jacqueline Fernandez\n","Ayushmann Khurrana\n","Akshaye Khanna\n","Sonam Kapoor\n","Karan Deol\n","Sanjay Dutt\n","Bhavesh Kumar\n","Sanaya Irani\n","Ayushmann Khurrana\n","Siddhanth Kapoor\n","Akshay Kumar\n","Taapsee Pannu\n","Rajkummar Rao\n","Sunny Singh Nijjar\n","Neil Nitin Mukesh\n","Suraj Pancholi\n","Boman Irani\n","Riteish Deshmukh\n","Nawazuddin Siddiqui\n","Shahbaaz Khan\n","Kriti Kharbanda\n","Naseeruddin Shah\n","Vardhan Puri\n","Sushant Singh Rajput\n","Kartik Aaryan\n","Vidyut Jammwal\n","Rani Mukerji\n","Salman Khan\n","Akshay Kumar\n","Saif Ali Khan\n","Kay Kay Menon\n","Nora Fatehi\n","Ashmit Patel\n","Viineet Kumar\n","Rahul Bhat\n","Vicky Kaushal\n","Sidharth Malhotra\n","Deepika Padukone\n","Geetanjali Thapa\n","Akshay Anand\n","Pulkit Samrat\n","Kartik Aaryan\n","Lee Byford\n","Taapsee Pannu\n","Aisha Ahmed\n","Ajay Devgn\n","Rani Mukerji\n","Manoj Bajpayee\n","Tiger Shroff\n","Varun Dhawan\n","Prabhu Deva\n","Ishaan Khattar\n","Abhay Deol\n","Yogesh Raj Mishra\n","Rajkummar Rao\n","Alia Bhatt\n","Naseeruddin Shah\n","Sumeet Vyas\n","Vinay Pathak\n","John Abraham\n","Danny Denzongpa\n","Harshvardhan Kapoor\n","Jimmy Sheirgill\n","Anil Kapoor\n","Ishaan Khattar\n","Ranbir Kapoor\n","Sanjay Dutt\n","Dharmesh Yelande\n","Taapsee Pannu\n","Arjun Mathur\n","Irrfan Khan\n","Akshay Kumar\n","John Abraham\n","Sonakshi Sinha\n","Utkarsh Sharma\n","Dharmendra\n","Rajkummar Rao\n","Jackie Shroff\n","Avinash Tiwary\n","Manoj Bajpayee\n","Paoli Dam\n","Sanya Malhotra\n","Shahid Kapoor\n","Abhishek Bharate\n","Nawazuddin Siddiqui\n","Manish Anand\n","Taapsee Pannu\n","Jackky Bhagnani\n","Anushka Sharma\n","Radhika Apte\n","Rhea Chakraborty\n","Govinda\n","Sohum Shah\n","Kajol\n","Arjun Kapoor\n","Ayushmann Khurrana\n","Ayushmann Khurrana\n","Nargis Fakhri\n","Aishwarya Devan\n","Neil Nitin Mukesh\n","Shakti Kapoor\n","Amit Sadh\n","Sunny Deol\n","Rahul Bagga\n","Sunny Deol\n","Amyra Dastur\n","Shah Rukh Khan\n","Ranveer Singh\n","Salman Khan\n","Ajay Devgn\n","Varun Dhawan\n","Shraddha Kapoor\n","Sunil Grover\n","Hrithik Roshan\n","Raj Arjun\n","Aamir Khan\n","Gurmeet Ram Rahim Singh\n","Arsh Bajwa\n","Rana Daggubati\n","Naseeruddin Shah\n","Kangana Ranaut\n","Nana Patekar\n","Arbaaz Khan\n","Varun Dhawan\n","Rajkummar Rao\n","Govinda\n","Rajat Kapoor\n","Anushka Sharma\n","Kiara Advani\n","Shaurya Singh\n","Pankaj Tripathi\n","Taapsee Pannu\n","Adil Hussain\n","Amitabh Bachchan\n","Sunny Leone\n","Hema Malini\n","Raveena Tandon\n","Amitabh Bachchan\n","Amardeep Insan\n","Shraddha Kapoor\n","Ayushmann Khurrana\n","Sachin Tendulkar\n","Irrfan Khan\n","Himansh Kohli\n","Adil Hussain\n","Jayesh Raj\n","Manisha Koirala\n","Deepika Padukone\n","Rajkummar Rao\n","Salman Khan\n","Riteish Deshmukh\n","Shiv Darshan\n","Ranbir Kapoor\n","Ashish Bisht\n","Aahana Kumra\n","Manoj Babani\n","Rajveer Ankur Singh\n","Kirti Kulhari\n","Shah Rukh Khan\n","Tiger Shroff\n","Akshay Kumar\n","Anil Kapoor\n","Kartik Aaryan\n","Ayushmann Khurrana\n","Nawazuddin Siddiqui\n","Prisha Aneja\n","Aadar Jain\n","Ayushmann Khurrana\n","Kunal Kapoor\n","Arjun Rampal\n","Kangana Ranaut\n","Farhan Akhtar\n","Sidharth Malhotra\n","Hugh Bonneville\n","Rishi Kapoor\n","Rajkummar Rao\n","Kunaal Roy Kapur\n","Sunny Leone\n","Shraddha Kapoor\n","Rina Charaniya\n","Nawazuddin Siddiqui\n","Sunny Deol\n","Sridevi\n","Saif Ali Khan\n","Soundarya Sharma\n","Sudha Chandran\n","Manoj Bajpayee\n","Zaira Wasim\n","Prakash Belawadi\n","Kalki Koechlin\n","Rajkummar Rao\n","Richa Chadha\n","Irrfan Khan\n","Zareen Khan\n","Nayna Bandhopadhyay\n","Vidya Balan\n","Nishikant Kamat\n","Sanjay Mishra\n","Kapil Sharma\n","Pulkit Samrat\n","Vijay Varma\n","Sushama Deshpande\n","Richa Chadha\n","Prince Shah\n","Tanima Bhattacharya\n","Akshay Kumar\n","Zeenat Aman\n","Madhavan\n","Tusshar Kapoor\n","Tusshar Kapoor\n","Himansh Kohli\n","Sadhana Singh\n","Sunny Deol\n","Aditya Roy Kapoor\n","Rishi Kapoor\n","Rajniesh Duggall\n","Krishna Chaturvedi\n","Girish Taurani\n","Sonam Kapoor\n","Sukhesh Arora\n","Raima Sen\n","Anuj Sachdeva\n","Parthaa Akerkar\n","Priyanka Chopra\n","Sidharth Malhotra\n","John Abraham\n","Patralekhaa Paul\n","Shah Rukh Khan\n","Swara Bhaskar\n","Randeep Hooda\n","Shraddha Kapoor\n","Pankaj Tripathi\n","Jimmy Sheirgill\n","Kartik Elangovan\n","Boman Irani\n","Manoj Bajpayee\n","Sharman Joshi\n","Emraan Hashmi\n","Aanchal Dwivedi\n","Sanjay Singh\n","Arvind Swamy\n","Radhika Apte\n","Randeep Hooda\n","Sachiin Joshi\n","Kajal Aggarwal\n","Amitabh Bachchan\n","Shahid Kapoor\n","Hazel Croney\n","V. Ravichandran\n","Vipin Sharma\n","Nawazuddin Siddiqui\n","Pulkit Samrat\n","Tannishtha Chatterjee\n","Krrish Chhabria\n","Avinash Dhyani\n","Zeenat Aman\n","Salman Khan\n","Shashank Arora\n","Urvashi Rautela\n","Naseeruddin Shah\n","Sara Loren\n","Tom Alter\n","Irrfan Khan\n","John Abraham\n","Rajeev Khandelwal\n","Ileana D'Cruz\n","Sahil Anand\n","Hrithik Roshan\n","Diana Penty\n","Niharica Raizada\n","Tiger Shroff\n","Sidharth Malhotra\n","Nawazuddin Siddiqui\n","Emraan Hashmi\n","Taapsee Pannu\n","Tannishtha Chatterjee\n","Riteish Deshmukh\n","Yash Soni\n","Shreyas Talpade\n","Vinay Pathak\n","Jimmy Sharma\n","Sushant Singh Rajput\n","Ashok Insan\n","RJ Balaji\n","Saurav Chakraborty\n","Shashank Udapurkar\n","Shubham\n","Manoj Bajpayee\n","Sunny Leone\n","Aashish Bhatt\n","Ajay Devgn\n","Ronit Roy\n","Ranbir Kapoor\n","Neha Sharma\n","Farhan Akhtar\n","John Abraham\n","Alia Bhatt\n","Vaani Kapoor\n","Neha Dhupia\n","Jimmy Sheirgill\n","Sonarika Bhadoria\n","Amitabh Bachchan\n","Sharman Joshi\n","Aamir Khan\n","Harshvardhan Kapoor\n","Salman Khan\n","Kangana Ranaut\n","Kangana Ranaut\n","Soha Ali Khan\n","Prabhu Deva\n","Shah Rukh Khan\n","Salman Khan\n","Ranveer Singh\n","Anil Kapoor\n","Akshay Kumar\n","Akshay Kumar\n","Akshay Kumar\n","Akshay Kumar\n","Shakti Kapoor\n","Bipasha Basu\n","Arjun Kapoor\n","Zayed Khan\n","Malaika Arora\n","Naman Jain\n","Gurmeet Choudhary\n","Kay Kay Menon\n","Rati Agnihotri\n","Amitabh Bachchan\n","Arjun Rampal\n","Varun Dhawan\n","Swanand Kirkire\n","Sulabha Arya\n","Irrfan Khan\n","Nana Patekar\n","Ayushmann Khurrana\n","Anupam Kher\n","Gurmeet Ram Rahim Singh\n","Sidhant Gupta\n","Arjun Mathur\n","Ganesh Acharya\n","Anushka Sharma\n","Gulshan Devaiah\n","Sushant Singh Rajput\n","Adhyayan Suman\n","Vira Sathidar\n","Kalki Koechlin\n","Sunny Leone\n","Sara Loren\n","Emraan Hashmi\n","Auroshika Dey\n","Ira Dubey\n","Naseeruddin Shah\n","Vinay Pathak\n","Ram Kapoor\n","Deepika Padukone\n","Ranbir Kapoor\n","Shakti Anand\n","Anil Kapoor\n","Arshad Warsi\n","Meenakshi Dixit\n","Yash Acharya\n","Rajkummar Rao\n","Rahul Bagga\n","Mohit Baghel\n","Rishi Verma\n","Mimoh Chakraborty\n","Swara Bhaskar\n","Richa Chadha\n","Arshad Warsi\n","Mugdha Godse\n","Yashpal Sharma\n","Dharmendra\n","Sunny Deol\n","Smitha Gondkar\n","Kunal Kapoor\n","Ajay Devgn\n","Jacqueline Fernandez\n","Rishi Kapoor\n","Akshay Kumar\n","Vinay Pathak\n","Nawazuddin Siddiqui\n","Bhavita Anand\n","Saif Ali Khan\n","Suraj Pancholi\n","Shamim Khan\n","Irrfan Khan\n","Suhaas Ahuja\n","Jaideep Ahlawat\n","Charanpreet Insan\n","Akanksha Puri\n","Kunal Khemu\n","Aishwarya Rai Bachchan\n","Seema Azmi\n","Parveen Kaur\n","Kapil Sharma\n","Kartik Aaryan\n","Diganth\n","Shahid Kapoor\n","Nawazuddin Siddiqui\n","Kunal Khemu\n","Mann Bagga\n","Manish Paul\n","Sanjeev Kumar\n","Madhuri Dixit\n","Shiv Darshan\n","Gopi Desai\n","Mohinder Gujral\n","Zeenat Aman\n","Ranveer Singh\n","Salman Khan\n","Sidharth Malhotra\n","Adhyayan Suman\n","Indrapal Ahuja\n","Jimmy Sheirgill\n","Abhay Deol\n","Sahil Anand\n","Alia Bhatt\n","Sampat Pal Devi\n","Farhan Akhtar\n","Madhuri Dixit\n","Kangana Ranaut\n","Ayushmann Khurrana\n","Ali Zafar\n","Mahek Chahal\n","Monali Thakur\n","Sunny Leone\n","Harman Baweja\n","Sanjay Mishra\n","Sharman Joshi\n","Sachin Khedekar\n","Leeza Mangaldas\n","Pulkit Samrat\n","Zara Sheikh\n","Arjun Kapoor\n","Purab Kohli\n","Amitabh Bachchan\n","Varun Dhawan\n","Arvinder Bhatti\n","Kanika Batra\n","Jackky Bhagnani\n","Rajeev Khandelwal\n","Tanuj Virwani\n","Vijay Raaz\n","Kannan Arunachalam\n","Anjori Alagh\n","Satish Kaushik\n","Rahul Bagga\n","Himesh Reshammiya\n","Farooq Shaikh\n","Makrand Deshpande\n","Eesha Agarwal\n","Siddharth Gupta\n","Tiger Shroff\n","Rajkummar Rao\n","Sharib Hashmi\n","Kangana Ranaut\n","Kartik Aaryan\n","Swara Bhaskar\n","Simer Motiani\n","Anshuman Jha\n","Sidharth Malhotra\n","Vidya Balan\n","Saif Ali Khan\n","Varun Dhawan\n","Jay Bhanushali\n","Armaan Jain\n","Rajesh Khanna\n","Vir Das\n","Akshay Kumar\n","Jimmy Sheirgill\n","Reshmi Ghosh\n","Akshay Oberoi\n","Akshay Kumar\n","Anupam Kher\n","Rani Mukerji\n","Emraan Hashmi\n","Priyanka Chopra\n","Bipasha Basu\n","Deepika Padukone\n","Sonam Kapoor\n","Salil Acharya\n","Salman Khan\n","Saahil Prem\n","Alieesa P Badresia\n","Manoj Amarnani\n","Sasha Aagha\n","Tabu\n","Hrithik Roshan\n","Rati Agnihotri\n","Aditya Roy Kapoor\n","Asrani\n","Harshvardhan Deo\n","Nikhil Dwivedi\n","Karanvir Bohra\n","Puru Chibber\n","Soha Ali Khan\n","Rhea Chakraborty\n","Shah Rukh Khan\n","Rekha\n","Anupam Kher\n","Randeep Hooda\n","Akshay Kumar\n","Aadil Chahal\n","Shabana Azmi\n","Dimple Kapadia\n","Nishant Dahiya\n","Ranveer Singh\n","Emraan Hashmi\n","Saif Ali Khan\n","Vinod Acharya\n","Mannara Chopra\n","Prabhas\n","Mischa Barton\n","Shiv Panditt\n","Annu Kapoor\n","Barun Sobti\n","Rahul Bhat\n","Aamir Khan\n","Adhyayan Suman\n","Imran Khan\n","Naveen Kasturia\n","Arjun Rampal\n","Sarita Joshi\n","Kartik Aaryan\n","Juhi Chawla\n","Saif Ali Khan\n","Manisha Kelkar\n","Farooq Shaikh\n","Akshay Kumar\n","Randeep Hooda\n","Vivek Oberoi\n","Rajkummar Rao\n","Akash\n","Vishwa Mohan Badola\n","Neil Nitin Mukesh\n","Saqib Saleem\n","Arshad Warsi\n","Jimmy Sheirgill\n","Asha Bhosle\n","Kamal Haasan\n","Jackky Bhagnani\n","Aditya Roy Kapoor\n","Emraan Hashmi\n","Ajay Devgn\n","Ayushmann Khurrana\n","Vivek Oberoi\n","Vidyut Jammwal\n","Rani Mukerji\n","Saif Ali Khan\n","Riya Vij\n","Arjun Kapoor\n","Preity Zinta\n","Veena Malik\n","Ranbir Kapoor\n","Pulkit Samrat\n","Rupa Bhimani\n","Dhanush\n","Kay Kay Menon\n","Neil Nitin Mukesh\n","Vidya Balan\n","Anupam Kher\n","Sanjay Dutt\n","Farhan Akhtar\n","Wamiqa Gabbi\n","Shadab Kamal\n","Sunil Shetty\n","Prateik\n","Tusshar Kapoor\n","Tanuj Virwani\n","Poonam Pandey\n","Deepak Dobriyal\n","Hemant Gopal\n","Joy Mukherjee\n","Rishi Kapoor\n","Rajesh Tailang\n","Akshay Kumar\n","John Abraham\n","Amitabh Bachchan\n","Sushant Singh Rajput\n","Shruti Haasan\n","Deepika Padukone\n","Vivek Oberoi\n","Naseeruddin Shah\n","Karan Kundrra\n","Shahid Kapoor\n","Aida Elkashef\n","Irrfan Khan\n","Anisa Butt\n","Akshay Kumar\n","Rajkummar Rao\n","Manish Paul\n","Puneet Singh Ratn\n","Kangana Ranaut\n","Sumit Nijhawan\n","Tinnu Anand\n","Chandan Roy Sanyal\n","Elisha Kriis\n","Ashmit Patel\n","Imran Khan\n","Manu Rishi Chadha\n","Naseeruddin Shah\n","Paresh Rawal\n","Saif Ali Khan\n","Aamir Khan\n","Ali Zafar\n","Ranveer Singh\n","Sharman Joshi\n","Naseeruddin Shah\n","Shiney Ahuja\n","Karan Sharma\n","Sunny Deol\n","Ranveer Singh\n","Hrithik Roshan\n","Kareena Kapoor\n","Prateik\n","Kiran Bhatia\n","Bipasha Basu\n","Riteish Deshmukh\n","Jahangir Khan\n","Irrfan Khan\n","Vidya Balan\n","Mithun Chakraborty\n","Kareena Kapoor\n","Manish Chaudhary\n","Kavin Dave\n","Shikhi Gupta\n","Archana Joglekar\n","Tusshar Kapoor\n","Pulkit Samrat\n","Ayushmann Khurrana\n","Nikhil Dwivedi\n","Anil Kapoor\n","Karisma Kapoor\n","Arjun Kapoor\n","Sanjay Dutt\n","Gul Panag\n","Yudhveer Bakoliya\n","Kay Kay Menon\n","Emraan Hashmi\n","Sharman Joshi\n","Shahid Kapoor\n","Anupam Kher\n","Anya Anand\n","Julia Datt\n","Manoj Bajpayee\n","Manoj Bajpayee\n","Saif Ali Khan\n","Naresh Sharma\n","Riteish Deshmukh\n","Sonu Sood\n","Nassar Abdulla\n","Salman Khan\n","Vickrant Mahajan\n","Freny Bhagat\n","Akshay Kumar\n","Omkar Das Manikpuri\n","Sunil Shetty\n","Manoj Bajpayee\n","Bidita Bag\n","Harish Chabbra\n","Ranbir Kapoor\n","Kareena Kapoor\n","Sagar Bhangade\n","Vivek Oberoi\n","Ravi Kishan\n","Paresh Rawal\n","Rani Mukerji\n","Manoj Bajpayee\n","J.D. Chakravarthi\n","Cary Elwes\n","Arjun Rampal\n","Alia Bhatt\n","Jackky Bhagnani\n","Emraan Hashmi\n","Vicky Ahuja\n","Sunidhi Chauhan\n","Asrani\n","Shah Rukh Khan\n","Aamir Khan\n","Himanshu Bhatt\n","Ajay Devgn\n","Ashok Banthia\n","Salman Khan\n","Vinod Khanna\n","Akshay Kumar\n","Amitabh Bachchan\n","Sridevi\n","Vivek Sudershan\n","Nafisa Ali\n","Mohsin\n","Prateik\n","Gul Panag\n","Vatsal Sheth\n","Ajay Devgn\n","Russell Geoffrey Banks\n","Vinay Pathak\n","Rishi Kapoor\n","Priyanka Chopra\n","Madhavan\n","Arshad Warsi\n","Deepti Naval\n","Akshay Kumar\n","Sumit Arora\n","Anay\n","Om Puri\n","Abhishek Bachchan\n","Sendhil Ramamurthy\n","Darsheel Safary\n","Vinay Pathak\n","Ishaan Manhaas\n","Sanjay Mishra\n","Ashutosh Rana\n","Juhi Chawla\n","Govinda\n","Mimoh Chakraborty\n","Tusshar Kapoor\n","Kainaz Motivala\n","Partho A. Gupte\n","Nana Patekar\n","Sara Arjun\n","Kalki Koechlin\n","Kartik Aaryan\n","Vinay Pathak\n","Lillete Dubey\n","Sanjay Dutt\n","Amitabh Bachchan\n","Imran Khan\n","Emraan Hashmi\n","Aarav Khanna\n","Hrithik Roshan\n","Raghuvir Yadav\n","Gulshan Grover\n","Naushaad Abbas\n","Shefali Shah\n","Ajay Devgn\n","Rahul Jaiswal\n","Apoorva Arora\n","Isha Koppikar\n","Rajniesh Duggall\n","Amitabh Bachchan\n","Sanjay Dutt\n","Anupam Kher\n","Salman Khan\n","Deepshika Nagpal\n","Deepak Dobriyal\n","Tusshar Kapoor\n","Kiron Kher\n","Imran Khan\n","Shahid Kapoor\n","Mikaal\n","John Abraham\n","Jimmy Sheirgill\n","Vinay Pathak\n","Vinay Virmani\n","Dev Anand\n","Zayed Khan\n","Saqib Saleem\n","Sachiin Joshi\n","Shah Rukh Khan\n","Ranbir Kapoor\n","Chirag Paswan\n","Dharmendra\n","Himesh Reshammiya\n","Ranveer Singh\n","Akshay Kumar\n","Abhishek Bachchan\n","Rani Mukerji\n","Ajay Devgn\n","Vidya Balan\n","Priyanka Chopra\n","Shahid Kapoor\n","Prateik\n","Salman Khan\n","Siddharth\n","Amitabh Bachchan\n","Vidya Balan\n","Paresh Rawal\n","Sunny Gill\n","Shreyas Talpade\n","Tabu\n","Shah Rukh Khan\n","Amitabh Bachchan\n","Siddhartha Gupta\n","Shah Rukh Khan\n","Tanushree Dutta\n","Paul Sidhu\n","Sunny Deol\n","Gurdas Maan\n","Master Shams\n","Om Puri\n","Vikrum Kumar\n","Aditya Narayan\n","Arshad Warsi\n","Boman Irani\n","Nana Patekar\n","Priyanka Chopra\n","Arbaaz Khan\n","Rekha\n","Rahul Bose\n","Nana Patekar\n","Sudeep\n","Farooq Shaikh\n","Rohit Roy\n","Sachin Khedekar\n","Anuj Saxena\n","Akshay Kumar\n","Hazel Croney\n","Sanjeev Bhaskar\n","Vivek Oberoi\n","Abhishek Bachchan\n","Atul Kulkarni\n","Rajpal Yadav\n","Hrithik Roshan\n","Nushrat Bharucha\n","Kareena Kapoor\n","Bhushan Agarwal\n","Prashant Narayanan\n","Sanjay Dutt\n","Akshay Kumar\n","Ali Zafar\n","Rajat Barmecha\n","Ajay Devgn\n","Bobby Deol\n","Omkar Das Manikpuri\n","Neil Nitin Mukesh\n","Gul Panag\n","Raj Singh Chaudhary\n","John Abraham\n","Barkha Madan\n","Salman Khan\n","Supriya Pathak\n","Sunil Shetty\n","Rituparna Sengupta\n","Ranvir Shorey\n","Mallika Sherawat\n","Emraan Hashmi\n","Rishi Kapoor\n","Ajay Devgn\n","Manoj Bajpayee\n","Sanjay Dutt\n","John Abraham\n","Hrithik Roshan\n","Varun Bhagwat\n","Deepika Padukone\n","Sunny Deol\n","Rajat Kapoor\n","Akanksha\n","Jimmy Sheirgill\n","Sanjay Dutt\n","Ranveer Singh\n","Aditya Srivastava\n","Arunoday Singh\n","Akshay Kumar\n","Akshay Oberoi\n","Ajay Devgn\n","Neil Nitin Mukesh\n","Sahil Khan\n","Imran Khan\n","Sushmita Sen\n","Priyanka Chopra\n","Zeenat Aman\n","Bipasha Basu\n","Akshay Kumar\n","Aamir Khan\n","Farhan Akhtar\n","Saif Ali Khan\n","Salman Khan\n","Waheeda Rehman\n","Kangana Ranaut\n","Hrishitaa Bhatt\n","Ranbir Kapoor\n","Asrani\n","Irrfan Khan\n","Kay Kay Menon\n","Arshad Warsi\n","Paresh Rawal\n","Rati Agnihotri\n","Harman Baweja\n","Shahid Kapoor\n","Fardeen Khan\n","John Abraham\n","Kay Kay Menon\n","Aftab Shivdasani\n","Naseeruddin Shah\n","Inaamulhaq\n","Neil Nitin Mukesh\n","Kunal Khemu\n","Bobby Deol\n","Anita\n","Parzaan Dastur\n","Meghan Jadhav\n","Shreyas Talpade\n","John Abraham\n","Kay Kay Menon\n","Sanjay Dutt\n","Mithun Chakraborty\n","Govinda\n","Sunil Shetty\n","Jackie Shroff\n","Anupam Kher\n","Shreyas Talpade\n","Rishi Kapoor\n","Rajendra Prasad\n","Arjun Rampal\n","Mithun Chakraborty\n","Mithun Chakraborty\n","Bobby Deol\n","Shahid Kapoor\n","Harman Baweja\n","Fardeen Khan\n","Sanjay Dutt\n","Ranbir Kapoor\n","Salman Khan\n","Akshay Kumar\n","Atmaram Bhende\n","Amitabh Bachchan\n","Salman Khan\n","Manoj Bajpayee\n","Emraan Hashmi\n","Lewis Tan\n","Akshay Kumar\n","Amitabh Bachchan\n","Ranbir Kapoor\n","Aamir Bashir\n","Farooq Shaikh\n","Mithun Chakraborty\n","Abhishek Bachchan\n","Saif Ali Khan\n","Shah Rukh Khan\n","Aamir Khan\n","Akshay Kumar\n","Ajay Devgn\n","Hrithik Roshan\n","Ranbir Kapoor\n","Amitabh Bachchan\n","Amitabh Bachchan\n","Ajay Devgn\n","Omkar Bhatkar\n","Shreyas Talpade\n","Manisha Koirala\n","Ajay Devgn\n","Tusshar Kapoor\n","Juhi Chawla\n","Ajay Devgn\n","Kay Kay Menon\n","Akshay Kumar\n","Dino Morea\n","Mimoh Chakraborty\n","Emraan Hashmi\n","Mithun Chakraborty\n","Sikander Kher\n","Paresh Rawal\n","Ahraz Ahmed\n","Aftab Shivdasani\n","Amita Pathak\n","Saahil Chadha\n","Saif Ali Khan\n","Kay Kay Menon\n","Shahid Kapoor\n","Harman Baweja\n","Adhvik Mahajan\n","Vivek Oberoi\n","Govinda\n","Amitabh Bachchan\n","Paresh Rawal\n","Mallika Sherawat\n","Arjun Rampal\n","Tusshar Kapoor\n","Bobby Deol\n","Sammir Dattani\n","Victor Banerjee\n","Rajniesh Duggall\n","Amitabh Bachchan\n","Shreyas Talpade\n","Kiron Kher\n","Jackie Shroff\n","Jayshree Arora\n","Sharman Joshi\n","Himesh Reshammiya\n","Sohail Khan\n","Saif Ali Khan\n","Isha Koppikar\n","Kamal Rashid Khan\n","Priyanka Chopra\n","Vinay Pathak\n","Salman Khan\n","Abhay Deol\n","Vinay Pathak\n","Shabana Azmi\n","Manoj Bajpayee\n","Anupam Kher\n","Rajesh Khanna\n","Dino Morea\n","Irrfan Khan\n","Amitabh Bachchan\n","Himesh Reshammiya\n","Tusshar Kapoor\n","Nauheed Cyrusi\n","Madhuri Dixit\n","Dharmendra\n","Emraan Hashmi\n","Vinay Pathak\n","Akshay Kumar\n","Dino Morea\n","Sunny Deol\n","Mouli Ganguly\n","Krishna Abhishek\n","Irrfan Khan\n","Kay Kay Menon\n","Pankaj Kapur\n","Jazzy Doe\n","Mona Ambegaonkar\n","Ajay Devgn\n","Amitabh Bachchan\n","Jimmy Sheirgill\n","Fardeen Khan\n","Shah Rukh Khan\n","Sanjay Dutt\n","John Abraham\n","Pankaj Kapur\n","Sunil Pal\n","Muzamil Ibrahim\n","Imaaduddin Shah\n","Sharman Joshi\n","Abhay Deol\n","Arjun Rampal\n","Akshaye Khanna\n","Rishi Kapoor\n","Arbaaz Khan\n","Amitabh Bachchan\n","Gautam Gupta\n","Mohan Azaad\n","Juanna Sanghvi\n","Mithun Chakraborty\n","Ranvir Shorey\n","Govinda\n","Abhishek Bachchan\n","Shahid Kapoor\n","Tusshar Kapoor\n","Shahid Kapoor\n","Shiney Ahuja\n","Dharmendra\n","Fardeen Khan\n","Tusshar Kapoor\n","Rekha\n","Jimmy Sheirgill\n","Rani Mukerji\n","Dharmendra\n","Shabana Azmi\n","Abhay Deol\n","Salman Khan\n","Menekka Arora\n","Nana Patekar\n","Bobby Deol\n","Linda Arsenio\n","Kal Penn\n","Akshay Kumar\n","Jason Lewis\n","Sanjay Dutt\n","Amitabh Bachchan\n","John Abraham\n","Shah Rukh Khan\n","Salman Khan\n","Rahul Khanna\n","Dwij Yadav\n","Aftab Shivdasani\n","Vinod Khanna\n","Bobby Deol\n","Sherlyn Chopra\n","Salman Khan\n","Rani Mukerji\n","Mahima Chaudhry\n","Mandar Jadhav\n","Aftab Shivdasani\n","Amitabh Bachchan\n","Jimmy Sheirgill\n","Manoj Bajpayee\n","Darsheel Safary\n","Saif Ali Khan\n","Urmila Matondkar\n","Kunal Khemu\n","Emraan Hashmi\n","Tushar Jalota\n","Jaya Bachchan\n","Akshay Kumar\n","Akshaye Khanna\n","Jeetendra\n","Akshaye Khanna\n","Abhay Deol\n","Emraan Hashmi\n","Akshay Kapoor\n","Sanjay Dutt\n","Bobby Darling\n","Aftab Shivdasani\n","Rekha\n","Amitabh Bachchan\n","Rati Agnihotri\n","Rahul Dev\n","Naseeruddin Shah\n","Urmila Matondkar\n","Juhi Chawla\n","Akshay Kumar\n","Sushmita Sen\n","Jackie Shroff\n","Somesh Agarwal\n","Sohail Khan\n","Kareena Kapoor\n","Bipasha Basu\n","Amitabh Bachchan\n","Rajit Kapoor\n","Emraan Hashmi\n","Ishrat Ali\n","Raj Tara\n","Hrithik Roshan\n","Ayesha Takia\n","Shah Rukh Khan\n","Amitabh Bachchan\n","Aamir Khan\n","Kangana Ranaut\n","Ajay Devgn\n","Ram Kapoor\n","Sunil Shetty\n","Ajay Devgn\n","Akshay Kumar\n","Arjun Rampal\n","Arjun Rampal\n","Aftab Shivdasani\n","Salman Khan\n","Emraan Hashmi\n","Onjolee Nair\n","Amarjeet\n","Anupam Kher\n","Amitabh Bachchan\n","Rishi Kapoor\n","Sanjay Dutt\n","John Abraham\n","Nassar Abdulla\n","Rekha\n","Paresh Rawal\n","Ajay Devgn\n","Rahul Bose\n","Sunny Deol\n","Akshay Kumar\n","Fardeen Khan\n","Akshay Kumar\n","Jeetendra\n","Sarika\n","Aamir Khan\n","Salman Khan\n","Govinda\n","Akshaye Khanna\n","Salman Khan\n","Mohit Ahlawat\n","Mahima Chaudhry\n","Ajay Devgn\n","Mohammad Amir Naji\n","Sanjay Dutt\n","Irrfan Khan\n","Aishwarya Rai Bachchan\n","Nana Patekar\n","Sunny Deol\n","Shahid Kapoor\n","Priyanshu Chatterjee\n","Gurdas Maan\n","Kangana Ranaut\n","Paresh Rawal\n","Jimmy Sheirgill\n","Sushmita Sen\n","Rakesh Bedi\n","Emraan Hashmi\n","Manisha Koirala\n","Ajay Devgn\n","Rekha\n","Juhi Chawla\n","Bobby Deol\n","Anil Kapoor\n","Amitabh Bachchan\n","Sanjay Dutt\n","Abhishek Bachchan\n","Shawar Ali\n","Ali Asgar\n","Tabu\n","Ajay Devgn\n","Abhishek Bachchan\n","Aryan Vaid\n","Jatin Grewal\n","Samir Aftab\n","Anil Kapoor\n","Randeep Hooda\n","Akshay Kumar\n","Saayli Buva\n","Bipasha Basu\n","Amitabh Bachchan\n","Akshay Kumar\n","Mithun Chakraborty\n","Sanjay Dutt\n","Arjun Rampal\n","Shilpa Shetty Kundra\n","Amitabh Bachchan\n","Siddharth Koirala\n","Fardeen Khan\n","Ayesha Jhulka\n","Aseel Adel\n","Vivek Oberoi\n","Akshay Kumar\n","Shreyas Talpade\n","Chiranjeevi\n","Kay Kay Menon\n","Akshay Kumar\n","Sunny Deol\n","John Abraham\n","Ajay Devgn\n","Kunal Khemu\n","Lucky Ali\n","Mukesh Khanna\n","Mohit Ahlawat\n","Vivek Oberoi\n","Aftab Shivdasani\n","Shilpa Shetty Kundra\n","Kamal Adib\n","Arshad Warsi\n","Tusshar Kapoor\n","Salman Khan\n","Ajay Devgn\n","Salman Khan\n","Rajpal Yadav\n","Anupam Kher\n","Salman Khan\n","Aamir Khan\n","Dia Mirza\n","Dev Anand\n","Sanjay Suri\n","Anil Kapoor\n","Urmila Matondkar\n","Uday Chopra\n","Anil Kapoor\n","Sunil Shetty\n","Konkona Sen Sharma\n","Shabana Azmi\n","Saif Ali Khan\n","Vinod Khanna\n","Shah Rukh Khan\n","Irrfan Khan\n","Rishi Kapoor\n","Saif Ali Khan\n","Kashmira Shah\n","Amitabh Bachchan\n","Arshad Warsi\n","Sanjay Dutt\n","Ashutosh Rana\n","Neha Dhupia\n","Madhavan\n","Tabu\n","Abhay Deol\n","Zulfi Sayed\n","Ajay Devgn\n","Nassar Abdulla\n","Arjun Rampal\n","Shahid Kapoor\n","Aarti Chhabria\n","Fardeen Khan\n","Amitabh Bachchan\n","Amitabh Bachchan\n","Vikram Aditya\n","Arjun Rampal\n","Emraan Hashmi\n","Shah Rukh Khan\n","Shah Rukh Khan\n","Ajay Devgn\n","Salman Khan\n","Abhishek Bachchan\n","Amitabh Bachchan\n","Saif Ali Khan\n","Akshaye Khanna\n","Mallika Sherawat\n","Ajay Devgn\n","Akshay Kumar\n","Amitabh Bachchan\n","Amitabh Bachchan\n","Shatrughan Sinha\n","Bobby Deol\n","Kareena Kapoor\n","Jimmy Sheirgill\n","Arjun Rampal\n","Jimmy Sheirgill\n","Amitabh Bachchan\n","Amitabh Bachchan\n","Shahid Kapoor\n","Salman Khan\n","Jackie Shroff\n","Naveen Bawa\n","Vikaas Kalantari\n","Tusshar Kapoor\n","Kareena Kapoor\n","Salman Khan\n","Sunil Shetty\n","Saif Ali Khan\n","Isha Koppikar\n","Akshay Kumar\n","Aniket Vishwasrao\n","Shawar Ali\n","Tisca Chopra\n","Neha Dhupia\n","Raqesh Bapat\n","Manoj Bajpayee\n","Mallika Sherawat\n","Dino Morea\n","Sohail Khan\n","Kiron Kher\n","Bobby Deol\n","Sunny Deol\n","Sohail Khan\n","Amitabh Bachchan\n","Bipasha Basu\n","Hrithik Roshan\n","Dino Morea\n","Irrfan Khan\n","Aftab Shivdasani\n","Tabu\n","Anil Kapoor\n","Prithviraj Kapoor\n","Aftab Shivdasani\n","Akshay Kumar\n","Antara Mali\n","Vinay Anand\n","John Abraham\n","Salman Khan\n","Sanjay Dutt\n","Akshay Kumar\n","Manisha Koirala\n","Akshay Kapoor\n","Sanjay Dutt\n","Ajay Devgn\n","Sanjay Dutt\n","Sanjay Suri\n","Abhishek Bachchan\n","Sunny Deol\n","Aftab Shivdasani\n","Shah Rukh Khan\n","Vatsal Sheth\n","Madhavan\n","Tusshar Kapoor\n","Emraan Hashmi\n","Vicky Ahuja\n","Shah Rukh Khan\n","Tarun Arora\n","Diwakar Pathak\n","Arya Babbar\n","Rekha\n","Shah Rukh Khan\n","Anupam Kher\n","Shah Rukh Khan\n","Sunny Deol\n","Amitabh Bachchan\n","Hrithik Roshan\n","Sanjay Dutt\n","Sanjay Dutt\n","Sanjay Dutt\n","Ajay Devgn\n","Atul Kulkarni\n","Naseeruddin Shah\n","Arun Bakshi\n","Priyanshu Chatterjee\n","Ajay Devgn\n","Amitabh Bachchan\n","Sudesh Berry\n","Akshay Kumar\n","Akshay Kumar\n","Amitabh Bachchan\n","Ajay Devgn\n","Anil Kapoor\n","Jackie Shroff\n","Sadashiv Amrapurkar\n","Sooraj Balaji\n","Arjun Rampal\n","Sameera Reddy\n","Om Puri\n","Amar Upadhyaya\n","Zayed Khan\n","Nawazuddin Siddiqui\n","Vivek Oberoi\n","Kapil Jhaveri\n","Nandita Das\n","Aftab Shivdasani\n","Manisha Koirala\n","Rahul Bose\n","Ajay Devgn\n","Tabu\n","Jimmy Sheirgill\n","Sanjay Dutt\n","Akshaye Khanna\n","Vikram Dasu\n","Reef Karim\n","Jaz Pandher\n","Rushali Arora\n","Ashmit Patel\n","Sunny Deol\n","Shahid Kapoor\n","Babbu Mann\n","Javed Jaffrey\n","Bipasha Basu\n","Sanjay Suri\n","Om Puri\n","Juhi Babbar\n","Sunny Deol\n","Feroz Khan\n","Amit Hingorani\n","Fardeen Khan\n","Himanshu Malik\n","Tusshar Kapoor\n","Aishwarya Rai Bachchan\n","Antara Mali\n","Victor Banerjee\n","Manisha Koirala\n","Attin Bhalla\n","Riteish Deshmukh\n","Rahul Bose\n","Tulip Joshi\n","Ajay Devgn\n","Urmila Matondkar\n","Abhishek Bachchan\n","John Abraham\n","Sushmita Sen\n","Vikas Kalantri\n","Raveena Tandon\n","Tanishaa Mukerji\n","Raveena Tandon\n","Vijay Raaz\n","Raveena Tandon\n","Tanuja\n","Ankit\n","Sadashiv Amrapurkar\n","Salman Khan\n","Riteish Deshmukh\n","Rakhee Gulzar\n","Shabana Azmi\n","Edwin Fernandes\n","Tusshar Kapoor\n","Sharman Joshi\n","Dino Morea\n","Ajay Devgn\n","Arshad Warsi\n","Shah Rukh Khan\n","Amitabh Bachchan\n","Shah Rukh Khan\n","Amitabh Bachchan\n","Vivek Oberoi\n","Ajay Devgn\n","Akshay Kumar\n"]}]},{"cell_type":"code","source":["##arithmetic opreators\n","st-10"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"d2gSpH3_df-R","executionInfo":{"status":"ok","timestamp":1742657324210,"user_tz":-345,"elapsed":12,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"703217ad-5845-449d-bb3b-d780de06b940"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["match_no\n","1      -9\n","2      13\n","3       3\n","4       2\n","5      -9\n","       ..\n","211   -10\n","212    10\n","213    63\n","214    15\n","215    -3\n","Name: runs, Length: 215, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>runs</th>\n","    </tr>\n","    <tr>\n","      <th>match_no</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>-9</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>-9</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>-10</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>-3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>215 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["##relational opreators\n","st[st>100]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"6t7k9i-0eJA0","executionInfo":{"status":"ok","timestamp":1742657383985,"user_tz":-345,"elapsed":13,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"835d318b-ee97-4cfe-fcf3-279d05cd9d6c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["match_no\n","123    108\n","126    109\n","128    113\n","Name: runs, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>runs</th>\n","    </tr>\n","    <tr>\n","      <th>match_no</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>123</th>\n","      <td>108</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>109</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>113</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["st[st==50]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"eWl80BfHebNg","executionInfo":{"status":"ok","timestamp":1742657424491,"user_tz":-345,"elapsed":40,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"ef871440-c038-4a3e-fae5-0a52ec25ca69"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["match_no\n","15     50\n","182    50\n","Name: runs, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>runs</th>\n","    </tr>\n","    <tr>\n","      <th>match_no</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>15</th>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>182</th>\n","      <td>50</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["##two conditions\n","\n","st[(st>50) & (st<100)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"sMkZkn6we28n","executionInfo":{"status":"ok","timestamp":1742657593541,"user_tz":-345,"elapsed":14,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"6085ccdb-3fca-4653-c055-99c7f2429fee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["match_no\n","34     58\n","41     71\n","44     56\n","45     67\n","52     70\n","57     57\n","68     73\n","71     51\n","73     58\n","74     65\n","80     57\n","81     93\n","82     99\n","85     56\n","97     67\n","99     73\n","103    51\n","104    62\n","110    82\n","116    75\n","117    79\n","119    80\n","122    52\n","127    75\n","129    54\n","131    54\n","132    62\n","134    64\n","137    55\n","141    58\n","144    57\n","145    92\n","148    68\n","152    70\n","160    84\n","162    67\n","175    72\n","178    90\n","188    72\n","197    51\n","198    53\n","209    58\n","213    73\n","Name: runs, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>runs</th>\n","    </tr>\n","    <tr>\n","      <th>match_no</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>34</th>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>71</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>73</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>65</td>\n","    </tr>\n","    <tr>\n","      <th>80</th>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>93</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>99</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>73</td>\n","    </tr>\n","    <tr>\n","      <th>103</th>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>104</th>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>110</th>\n","      <td>82</td>\n","    </tr>\n","    <tr>\n","      <th>116</th>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>117</th>\n","      <td>79</td>\n","    </tr>\n","    <tr>\n","      <th>119</th>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>122</th>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>127</th>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>129</th>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>131</th>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>132</th>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>134</th>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>137</th>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>141</th>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>144</th>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>92</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>152</th>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th>160</th>\n","      <td>84</td>\n","    </tr>\n","    <tr>\n","      <th>162</th>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>175</th>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>90</td>\n","    </tr>\n","    <tr>\n","      <th>188</th>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>209</th>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>73</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["#actors who have done movies more than 30\n","ct=movies.value_counts()\n","ct[ct>30]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"jRTkQvsUfSyT","executionInfo":{"status":"ok","timestamp":1742659111500,"user_tz":-345,"elapsed":43,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"312b08be-0c13-40a0-a31b-0bf2461c23e7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["lead\n","Akshay Kumar        48\n","Amitabh Bachchan    45\n","Ajay Devgn          38\n","Salman Khan         31\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>lead</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akshay Kumar</th>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>Amitabh Bachchan</th>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>Ajay Devgn</th>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>Salman Khan</th>\n","      <td>31</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["##plotting graphs of series\n","st.plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":468},"id":"RaUTTMz1fS20","executionInfo":{"status":"ok","timestamp":1742659343923,"user_tz":-345,"elapsed":529,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"dbe9d104-6215-4c26-ee7b-5a43f5d083b2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='match_no'>"]},"metadata":{},"execution_count":64},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["val=movies.value_counts()\n","val\n","val.plot(kind='bar')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":645},"id":"9QLyScW_fS6J","executionInfo":{"status":"ok","timestamp":1742659430342,"user_tz":-345,"elapsed":5856,"user":{"displayName":"Pujan Acharya","userId":"15013921014500389961"}},"outputId":"fda2550c-c7e1-41d0-d9da-536e8216a3c9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='lead'>"]},"metadata":{},"execution_count":68},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"kUDdVZ87l5dn"},"execution_count":null,"outputs":[]}]}